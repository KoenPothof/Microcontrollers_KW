
4.B.4.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000018  00800100  000007f0  00000864  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000007f0  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      0000005c  00000000  00000000  0000087c  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000008d8  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000080  00000000  00000000  00000914  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000d01  00000000  00000000  00000994  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000a18  00000000  00000000  00001695  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000005bc  00000000  00000000  000020ad  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  0000010c  00000000  00000000  0000266c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000004b2  00000000  00000000  00002778  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000002d0  00000000  00000000  00002c2a  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000060  00000000  00000000  00002efa  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	58 c0       	rjmp	.+176    	; 0xb6 <__bad_interrupt>
   6:	00 00       	nop
   8:	56 c0       	rjmp	.+172    	; 0xb6 <__bad_interrupt>
   a:	00 00       	nop
   c:	54 c0       	rjmp	.+168    	; 0xb6 <__bad_interrupt>
   e:	00 00       	nop
  10:	52 c0       	rjmp	.+164    	; 0xb6 <__bad_interrupt>
  12:	00 00       	nop
  14:	50 c0       	rjmp	.+160    	; 0xb6 <__bad_interrupt>
  16:	00 00       	nop
  18:	4e c0       	rjmp	.+156    	; 0xb6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	4c c0       	rjmp	.+152    	; 0xb6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	4a c0       	rjmp	.+148    	; 0xb6 <__bad_interrupt>
  22:	00 00       	nop
  24:	48 c0       	rjmp	.+144    	; 0xb6 <__bad_interrupt>
  26:	00 00       	nop
  28:	46 c0       	rjmp	.+140    	; 0xb6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	44 c0       	rjmp	.+136    	; 0xb6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	42 c0       	rjmp	.+132    	; 0xb6 <__bad_interrupt>
  32:	00 00       	nop
  34:	40 c0       	rjmp	.+128    	; 0xb6 <__bad_interrupt>
  36:	00 00       	nop
  38:	3e c0       	rjmp	.+124    	; 0xb6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	3c c0       	rjmp	.+120    	; 0xb6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	3a c0       	rjmp	.+116    	; 0xb6 <__bad_interrupt>
  42:	00 00       	nop
  44:	38 c0       	rjmp	.+112    	; 0xb6 <__bad_interrupt>
  46:	00 00       	nop
  48:	36 c0       	rjmp	.+108    	; 0xb6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	34 c0       	rjmp	.+104    	; 0xb6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	32 c0       	rjmp	.+100    	; 0xb6 <__bad_interrupt>
  52:	00 00       	nop
  54:	30 c0       	rjmp	.+96     	; 0xb6 <__bad_interrupt>
  56:	00 00       	nop
  58:	2e c0       	rjmp	.+92     	; 0xb6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	2c c0       	rjmp	.+88     	; 0xb6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	2a c0       	rjmp	.+84     	; 0xb6 <__bad_interrupt>
  62:	00 00       	nop
  64:	28 c0       	rjmp	.+80     	; 0xb6 <__bad_interrupt>
  66:	00 00       	nop
  68:	26 c0       	rjmp	.+76     	; 0xb6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	24 c0       	rjmp	.+72     	; 0xb6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	22 c0       	rjmp	.+68     	; 0xb6 <__bad_interrupt>
  72:	00 00       	nop
  74:	20 c0       	rjmp	.+64     	; 0xb6 <__bad_interrupt>
  76:	00 00       	nop
  78:	1e c0       	rjmp	.+60     	; 0xb6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	1c c0       	rjmp	.+56     	; 0xb6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	1a c0       	rjmp	.+52     	; 0xb6 <__bad_interrupt>
  82:	00 00       	nop
  84:	18 c0       	rjmp	.+48     	; 0xb6 <__bad_interrupt>
  86:	00 00       	nop
  88:	16 c0       	rjmp	.+44     	; 0xb6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e0 ef       	ldi	r30, 0xF0	; 240
  a0:	f7 e0       	ldi	r31, 0x07	; 7
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a8 31       	cpi	r26, 0x18	; 24
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>
  b2:	99 d0       	rcall	.+306    	; 0x1e6 <main>
  b4:	9b c3       	rjmp	.+1846   	; 0x7ec <_exit>

000000b6 <__bad_interrupt>:
  b6:	a4 cf       	rjmp	.-184    	; 0x0 <__vectors>

000000b8 <lcd_strobe_lcd_e>:
	// Second nibble
	PORTC = (byte<<4);
	PORTC |= (1<<LCD_RS);
	lcd_strobe_lcd_e();
	}void lcd_strobe_lcd_e(void) {
	PORTC |= (1<<LCD_E);
  b8:	85 b3       	in	r24, 0x15	; 21
  ba:	88 60       	ori	r24, 0x08	; 8
  bc:	85 bb       	out	0x15, r24	; 21
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  be:	8f ec       	ldi	r24, 0xCF	; 207
  c0:	97 e0       	ldi	r25, 0x07	; 7
  c2:	01 97       	sbiw	r24, 0x01	; 1
  c4:	f1 f7       	brne	.-4      	; 0xc2 <lcd_strobe_lcd_e+0xa>
  c6:	00 c0       	rjmp	.+0      	; 0xc8 <lcd_strobe_lcd_e+0x10>
  c8:	00 00       	nop
	_delay_ms(1);
	PORTC &= ~(1<<LCD_E);
  ca:	85 b3       	in	r24, 0x15	; 21
  cc:	87 7f       	andi	r24, 0xF7	; 247
  ce:	85 bb       	out	0x15, r24	; 21
  d0:	8f ec       	ldi	r24, 0xCF	; 207
  d2:	97 e0       	ldi	r25, 0x07	; 7
  d4:	01 97       	sbiw	r24, 0x01	; 1
  d6:	f1 f7       	brne	.-4      	; 0xd4 <lcd_strobe_lcd_e+0x1c>
  d8:	00 c0       	rjmp	.+0      	; 0xda <lcd_strobe_lcd_e+0x22>
  da:	00 00       	nop
  dc:	08 95       	ret

000000de <lcd_write_cmd>:
	for(;*str; str++){
		lcd_write_data(*str);
	}

}void lcd_write_cmd(unsigned char byte)
{
  de:	cf 93       	push	r28
  e0:	c8 2f       	mov	r28, r24
	// First nibble.
	PORTC = byte;
  e2:	85 bb       	out	0x15, r24	; 21
	PORTC &= ~(1<<LCD_RS);
  e4:	85 b3       	in	r24, 0x15	; 21
  e6:	8b 7f       	andi	r24, 0xFB	; 251
  e8:	85 bb       	out	0x15, r24	; 21
	lcd_strobe_lcd_e();
  ea:	e6 df       	rcall	.-52     	; 0xb8 <lcd_strobe_lcd_e>

	// Second nibble
	PORTC = (byte<<4);
  ec:	c2 95       	swap	r28
  ee:	c0 7f       	andi	r28, 0xF0	; 240
  f0:	c5 bb       	out	0x15, r28	; 21
	PORTC &= ~(1<<LCD_RS);
  f2:	85 b3       	in	r24, 0x15	; 21
  f4:	8b 7f       	andi	r24, 0xFB	; 251
	lcd_strobe_lcd_e();
  f6:	85 bb       	out	0x15, r24	; 21
  f8:	df df       	rcall	.-66     	; 0xb8 <lcd_strobe_lcd_e>
	}void lcd_write_data(unsigned char byte) {
  fa:	cf 91       	pop	r28
  fc:	08 95       	ret

000000fe <lcd_write_data>:
  fe:	cf 93       	push	r28
 100:	c8 2f       	mov	r28, r24
	// First nibble.
	PORTC = byte;
 102:	85 bb       	out	0x15, r24	; 21
	PORTC |= (1<<LCD_RS);
 104:	85 b3       	in	r24, 0x15	; 21
 106:	84 60       	ori	r24, 0x04	; 4
 108:	85 bb       	out	0x15, r24	; 21
	lcd_strobe_lcd_e();
 10a:	d6 df       	rcall	.-84     	; 0xb8 <lcd_strobe_lcd_e>

	// Second nibble
	PORTC = (byte<<4);
 10c:	c2 95       	swap	r28
 10e:	c0 7f       	andi	r28, 0xF0	; 240
 110:	c5 bb       	out	0x15, r28	; 21
	PORTC |= (1<<LCD_RS);
 112:	85 b3       	in	r24, 0x15	; 21
 114:	84 60       	ori	r24, 0x04	; 4
	lcd_strobe_lcd_e();
 116:	85 bb       	out	0x15, r24	; 21
 118:	cf df       	rcall	.-98     	; 0xb8 <lcd_strobe_lcd_e>
	}void lcd_strobe_lcd_e(void) {
 11a:	cf 91       	pop	r28
 11c:	08 95       	ret

0000011e <lcd_write_string>:
	lcd_write_string(reset);
	lcd_set_cursor(40);
	lcd_write_string(reset);
}

void lcd_write_string(char *str) {
 11e:	cf 93       	push	r28
 120:	df 93       	push	r29
 122:	ec 01       	movw	r28, r24
	
	for(;*str; str++){
 124:	02 c0       	rjmp	.+4      	; 0x12a <lcd_write_string+0xc>
		lcd_write_data(*str);
 126:	eb df       	rcall	.-42     	; 0xfe <lcd_write_data>
	lcd_write_string(reset);
}

void lcd_write_string(char *str) {
	
	for(;*str; str++){
 128:	21 96       	adiw	r28, 0x01	; 1
 12a:	88 81       	ld	r24, Y
 12c:	81 11       	cpse	r24, r1
 12e:	fb cf       	rjmp	.-10     	; 0x126 <lcd_write_string+0x8>
		lcd_write_data(*str);
	}

}void lcd_write_cmd(unsigned char byte)
 130:	df 91       	pop	r29
 132:	cf 91       	pop	r28
 134:	08 95       	ret

00000136 <lcd_display_text>:
	_delay_ms(1);
}

void lcd_display_text(char *str) {
	//set_cursor(0);
	lcd_write_string(str);
 136:	f3 cf       	rjmp	.-26     	; 0x11e <lcd_write_string>
 138:	08 95       	ret

0000013a <lcd_set_cursor>:
}

void lcd_set_cursor(int position) {
	lcd_write_cmd(position | (1 << 7));
 13a:	80 68       	ori	r24, 0x80	; 128
 13c:	d0 cf       	rjmp	.-96     	; 0xde <lcd_write_cmd>
 13e:	08 95       	ret

00000140 <lcd_init>:
void init_4bits_mode(void);
void lcd_write_string(char *str);
void lcd_write_data(unsigned char byte);
void lcd_write_cmd(unsigned char byte);

void lcd_init() {
 140:	1f 93       	push	r17
 142:	cf 93       	push	r28
 144:	df 93       	push	r29
 146:	cd b7       	in	r28, 0x3d	; 61
 148:	de b7       	in	r29, 0x3e	; 62
 14a:	61 97       	sbiw	r28, 0x11	; 17
 14c:	0f b6       	in	r0, 0x3f	; 63
 14e:	f8 94       	cli
 150:	de bf       	out	0x3e, r29	; 62
 152:	0f be       	out	0x3f, r0	; 63
 154:	cd bf       	out	0x3d, r28	; 61
	// PORTC output mode and all low (also E and RS pin)
	DDRC = 0xFF;
 156:	8f ef       	ldi	r24, 0xFF	; 255
 158:	84 bb       	out	0x14, r24	; 20
	PORTC = 0x00;
 15a:	15 ba       	out	0x15, r1	; 21

	// Step 2 (table 12)
	PORTC = 0x20;	// function set
 15c:	10 e2       	ldi	r17, 0x20	; 32
 15e:	15 bb       	out	0x15, r17	; 21
	lcd_strobe_lcd_e();
 160:	ab df       	rcall	.-170    	; 0xb8 <lcd_strobe_lcd_e>

	// Step 3 (table 12)
	PORTC = 0x20;   // function set
	lcd_strobe_lcd_e();
 162:	15 bb       	out	0x15, r17	; 21
 164:	a9 df       	rcall	.-174    	; 0xb8 <lcd_strobe_lcd_e>
	PORTC = 0x80;
 166:	80 e8       	ldi	r24, 0x80	; 128
	lcd_strobe_lcd_e();
 168:	85 bb       	out	0x15, r24	; 21

	// Step 4 (table 12)
	PORTC = 0x00;   // Display on/off control
 16a:	a6 df       	rcall	.-180    	; 0xb8 <lcd_strobe_lcd_e>
	lcd_strobe_lcd_e();
 16c:	15 ba       	out	0x15, r1	; 21
	PORTC = 0xF0;
 16e:	a4 df       	rcall	.-184    	; 0xb8 <lcd_strobe_lcd_e>
	lcd_strobe_lcd_e();
 170:	80 ef       	ldi	r24, 0xF0	; 240

	// Step 4 (table 12)
	PORTC = 0x00;   // Entry mode set
 172:	85 bb       	out	0x15, r24	; 21
	lcd_strobe_lcd_e();
 174:	a1 df       	rcall	.-190    	; 0xb8 <lcd_strobe_lcd_e>
 176:	15 ba       	out	0x15, r1	; 21
	PORTC = 0x60;
 178:	9f df       	rcall	.-194    	; 0xb8 <lcd_strobe_lcd_e>
 17a:	80 e6       	ldi	r24, 0x60	; 96
	lcd_strobe_lcd_e();
 17c:	85 bb       	out	0x15, r24	; 21
 17e:	9c df       	rcall	.-200    	; 0xb8 <lcd_strobe_lcd_e>
	
	char reset[] = "                "; //Reset string
 180:	81 e1       	ldi	r24, 0x11	; 17
 182:	e0 e0       	ldi	r30, 0x00	; 0
 184:	f1 e0       	ldi	r31, 0x01	; 1
 186:	de 01       	movw	r26, r28
 188:	11 96       	adiw	r26, 0x01	; 1
 18a:	01 90       	ld	r0, Z+
 18c:	0d 92       	st	X+, r0
	lcd_set_cursor(0);
 18e:	8a 95       	dec	r24
 190:	e1 f7       	brne	.-8      	; 0x18a <lcd_init+0x4a>
 192:	80 e0       	ldi	r24, 0x00	; 0
	lcd_write_string(reset);
 194:	90 e0       	ldi	r25, 0x00	; 0
 196:	d1 df       	rcall	.-94     	; 0x13a <lcd_set_cursor>
 198:	ce 01       	movw	r24, r28
	lcd_set_cursor(40);
 19a:	01 96       	adiw	r24, 0x01	; 1
 19c:	c0 df       	rcall	.-128    	; 0x11e <lcd_write_string>
 19e:	88 e2       	ldi	r24, 0x28	; 40
 1a0:	90 e0       	ldi	r25, 0x00	; 0
	lcd_write_string(reset);
 1a2:	cb df       	rcall	.-106    	; 0x13a <lcd_set_cursor>
 1a4:	ce 01       	movw	r24, r28
 1a6:	01 96       	adiw	r24, 0x01	; 1
 1a8:	ba df       	rcall	.-140    	; 0x11e <lcd_write_string>
}
 1aa:	61 96       	adiw	r28, 0x11	; 17
 1ac:	0f b6       	in	r0, 0x3f	; 63
 1ae:	f8 94       	cli
 1b0:	de bf       	out	0x3e, r29	; 62
 1b2:	0f be       	out	0x3f, r0	; 63
 1b4:	cd bf       	out	0x3d, r28	; 61
 1b6:	df 91       	pop	r29
 1b8:	cf 91       	pop	r28
 1ba:	1f 91       	pop	r17
 1bc:	08 95       	ret

000001be <adcInit>:

// Initialize ADC: 10-bits (left justified), free running
// Initialize ADC:
void adcInit( void )
{
	ADMUX = 0b11100011;			// AREF=VCC, result left adjusted, channel1 at pin PF1
 1be:	83 ee       	ldi	r24, 0xE3	; 227
 1c0:	87 b9       	out	0x07, r24	; 7
	ADCSRA = 0b11100110;		// ADC-enable, no interrupt, start, free running, division by 64
 1c2:	86 ee       	ldi	r24, 0xE6	; 230
 1c4:	86 b9       	out	0x06, r24	; 6
 1c6:	08 95       	ret

000001c8 <wait>:
}

void wait( int ms )
{
	for (int tms=0; tms<ms; tms++)
 1c8:	20 e0       	ldi	r18, 0x00	; 0
 1ca:	30 e0       	ldi	r19, 0x00	; 0
 1cc:	08 c0       	rjmp	.+16     	; 0x1de <wait+0x16>
 1ce:	ef ec       	ldi	r30, 0xCF	; 207
 1d0:	f7 e0       	ldi	r31, 0x07	; 7
 1d2:	31 97       	sbiw	r30, 0x01	; 1
 1d4:	f1 f7       	brne	.-4      	; 0x1d2 <wait+0xa>
 1d6:	00 c0       	rjmp	.+0      	; 0x1d8 <wait+0x10>
 1d8:	00 00       	nop
 1da:	2f 5f       	subi	r18, 0xFF	; 255
 1dc:	3f 4f       	sbci	r19, 0xFF	; 255
 1de:	28 17       	cp	r18, r24
 1e0:	39 07       	cpc	r19, r25
 1e2:	ac f3       	brlt	.-22     	; 0x1ce <wait+0x6>
	{
		_delay_ms( 1 );			// library function (max 30 ms at 8MHz)
	}
}
 1e4:	08 95       	ret

000001e6 <main>:


int main( void ) {
 1e6:	cf 93       	push	r28
 1e8:	df 93       	push	r29
 1ea:	cd b7       	in	r28, 0x3d	; 61
 1ec:	de b7       	in	r29, 0x3e	; 62
 1ee:	2a 97       	sbiw	r28, 0x0a	; 10
 1f0:	0f b6       	in	r0, 0x3f	; 63
 1f2:	f8 94       	cli
 1f4:	de bf       	out	0x3e, r29	; 62
 1f6:	0f be       	out	0x3f, r0	; 63
 1f8:	cd bf       	out	0x3d, r28	; 61
	DDRF = 0x00;				// set PORTF for input (ADC)
 1fa:	10 92 61 00 	sts	0x0061, r1	; 0x800061 <__TEXT_REGION_LENGTH__+0x7e0061>
	DDRA = 0xFF;				// set PORTA for output
 1fe:	8f ef       	ldi	r24, 0xFF	; 255
 200:	8a bb       	out	0x1a, r24	; 26
	adcInit();					// initialize ADC
 202:	dd df       	rcall	.-70     	; 0x1be <adcInit>
	lcd_init();					// Init lcd
 204:	9d df       	rcall	.-198    	; 0x140 <lcd_init>
 206:	85 b1       	in	r24, 0x05	; 5

	while (1)
	{
		PORTA = ADCH;
 208:	8b bb       	out	0x1b, r24	; 27
 20a:	85 b1       	in	r24, 0x05	; 5
		
		char temp[10];
		sprintf("%d    ", ADCH);	//Give temp the value of ADCH in string form
 20c:	1f 92       	push	r1
 20e:	8f 93       	push	r24
 210:	81 e1       	ldi	r24, 0x11	; 17
 212:	91 e0       	ldi	r25, 0x01	; 1
 214:	9f 93       	push	r25
 216:	8f 93       	push	r24
 218:	0e d0       	rcall	.+28     	; 0x236 <sprintf>
 21a:	80 e0       	ldi	r24, 0x00	; 0
		lcd_set_cursor(0);				//Reset cursor
 21c:	90 e0       	ldi	r25, 0x00	; 0
 21e:	8d df       	rcall	.-230    	; 0x13a <lcd_set_cursor>
 220:	ce 01       	movw	r24, r28
		lcd_display_text(temp);			//Display temp on lcd
 222:	01 96       	adiw	r24, 0x01	; 1
 224:	88 df       	rcall	.-240    	; 0x136 <lcd_display_text>
 226:	84 e6       	ldi	r24, 0x64	; 100
		
		wait(100);
 228:	90 e0       	ldi	r25, 0x00	; 0
 22a:	ce df       	rcall	.-100    	; 0x1c8 <wait>
 22c:	0f 90       	pop	r0
 22e:	0f 90       	pop	r0
 230:	0f 90       	pop	r0
 232:	0f 90       	pop	r0
 234:	e8 cf       	rjmp	.-48     	; 0x206 <main+0x20>

00000236 <sprintf>:
 236:	0f 93       	push	r16
 238:	1f 93       	push	r17
 23a:	cf 93       	push	r28
 23c:	df 93       	push	r29
 23e:	cd b7       	in	r28, 0x3d	; 61
 240:	de b7       	in	r29, 0x3e	; 62
 242:	2e 97       	sbiw	r28, 0x0e	; 14
 244:	0f b6       	in	r0, 0x3f	; 63
 246:	f8 94       	cli
 248:	de bf       	out	0x3e, r29	; 62
 24a:	0f be       	out	0x3f, r0	; 63
 24c:	cd bf       	out	0x3d, r28	; 61
 24e:	0d 89       	ldd	r16, Y+21	; 0x15
 250:	1e 89       	ldd	r17, Y+22	; 0x16
 252:	86 e0       	ldi	r24, 0x06	; 6
 254:	8c 83       	std	Y+4, r24	; 0x04
 256:	1a 83       	std	Y+2, r17	; 0x02
 258:	09 83       	std	Y+1, r16	; 0x01
 25a:	8f ef       	ldi	r24, 0xFF	; 255
 25c:	9f e7       	ldi	r25, 0x7F	; 127
 25e:	9e 83       	std	Y+6, r25	; 0x06
 260:	8d 83       	std	Y+5, r24	; 0x05
 262:	ae 01       	movw	r20, r28
 264:	47 5e       	subi	r20, 0xE7	; 231
 266:	5f 4f       	sbci	r21, 0xFF	; 255
 268:	6f 89       	ldd	r22, Y+23	; 0x17
 26a:	78 8d       	ldd	r23, Y+24	; 0x18
 26c:	ce 01       	movw	r24, r28
 26e:	01 96       	adiw	r24, 0x01	; 1
 270:	10 d0       	rcall	.+32     	; 0x292 <vfprintf>
 272:	ef 81       	ldd	r30, Y+7	; 0x07
 274:	f8 85       	ldd	r31, Y+8	; 0x08
 276:	e0 0f       	add	r30, r16
 278:	f1 1f       	adc	r31, r17
 27a:	10 82       	st	Z, r1
 27c:	2e 96       	adiw	r28, 0x0e	; 14
 27e:	0f b6       	in	r0, 0x3f	; 63
 280:	f8 94       	cli
 282:	de bf       	out	0x3e, r29	; 62
 284:	0f be       	out	0x3f, r0	; 63
 286:	cd bf       	out	0x3d, r28	; 61
 288:	df 91       	pop	r29
 28a:	cf 91       	pop	r28
 28c:	1f 91       	pop	r17
 28e:	0f 91       	pop	r16
 290:	08 95       	ret

00000292 <vfprintf>:
 292:	2f 92       	push	r2
 294:	3f 92       	push	r3
 296:	4f 92       	push	r4
 298:	5f 92       	push	r5
 29a:	6f 92       	push	r6
 29c:	7f 92       	push	r7
 29e:	8f 92       	push	r8
 2a0:	9f 92       	push	r9
 2a2:	af 92       	push	r10
 2a4:	bf 92       	push	r11
 2a6:	cf 92       	push	r12
 2a8:	df 92       	push	r13
 2aa:	ef 92       	push	r14
 2ac:	ff 92       	push	r15
 2ae:	0f 93       	push	r16
 2b0:	1f 93       	push	r17
 2b2:	cf 93       	push	r28
 2b4:	df 93       	push	r29
 2b6:	cd b7       	in	r28, 0x3d	; 61
 2b8:	de b7       	in	r29, 0x3e	; 62
 2ba:	2b 97       	sbiw	r28, 0x0b	; 11
 2bc:	0f b6       	in	r0, 0x3f	; 63
 2be:	f8 94       	cli
 2c0:	de bf       	out	0x3e, r29	; 62
 2c2:	0f be       	out	0x3f, r0	; 63
 2c4:	cd bf       	out	0x3d, r28	; 61
 2c6:	6c 01       	movw	r12, r24
 2c8:	7b 01       	movw	r14, r22
 2ca:	8a 01       	movw	r16, r20
 2cc:	fc 01       	movw	r30, r24
 2ce:	17 82       	std	Z+7, r1	; 0x07
 2d0:	16 82       	std	Z+6, r1	; 0x06
 2d2:	83 81       	ldd	r24, Z+3	; 0x03
 2d4:	81 ff       	sbrs	r24, 1
 2d6:	bf c1       	rjmp	.+894    	; 0x656 <__LOCK_REGION_LENGTH__+0x256>
 2d8:	ce 01       	movw	r24, r28
 2da:	01 96       	adiw	r24, 0x01	; 1
 2dc:	3c 01       	movw	r6, r24
 2de:	f6 01       	movw	r30, r12
 2e0:	93 81       	ldd	r25, Z+3	; 0x03
 2e2:	f7 01       	movw	r30, r14
 2e4:	93 fd       	sbrc	r25, 3
 2e6:	85 91       	lpm	r24, Z+
 2e8:	93 ff       	sbrs	r25, 3
 2ea:	81 91       	ld	r24, Z+
 2ec:	7f 01       	movw	r14, r30
 2ee:	88 23       	and	r24, r24
 2f0:	09 f4       	brne	.+2      	; 0x2f4 <vfprintf+0x62>
 2f2:	ad c1       	rjmp	.+858    	; 0x64e <__LOCK_REGION_LENGTH__+0x24e>
 2f4:	85 32       	cpi	r24, 0x25	; 37
 2f6:	39 f4       	brne	.+14     	; 0x306 <vfprintf+0x74>
 2f8:	93 fd       	sbrc	r25, 3
 2fa:	85 91       	lpm	r24, Z+
 2fc:	93 ff       	sbrs	r25, 3
 2fe:	81 91       	ld	r24, Z+
 300:	7f 01       	movw	r14, r30
 302:	85 32       	cpi	r24, 0x25	; 37
 304:	21 f4       	brne	.+8      	; 0x30e <vfprintf+0x7c>
 306:	b6 01       	movw	r22, r12
 308:	90 e0       	ldi	r25, 0x00	; 0
 30a:	d6 d1       	rcall	.+940    	; 0x6b8 <fputc>
 30c:	e8 cf       	rjmp	.-48     	; 0x2de <vfprintf+0x4c>
 30e:	91 2c       	mov	r9, r1
 310:	21 2c       	mov	r2, r1
 312:	31 2c       	mov	r3, r1
 314:	ff e1       	ldi	r31, 0x1F	; 31
 316:	f3 15       	cp	r31, r3
 318:	d8 f0       	brcs	.+54     	; 0x350 <vfprintf+0xbe>
 31a:	8b 32       	cpi	r24, 0x2B	; 43
 31c:	79 f0       	breq	.+30     	; 0x33c <vfprintf+0xaa>
 31e:	38 f4       	brcc	.+14     	; 0x32e <vfprintf+0x9c>
 320:	80 32       	cpi	r24, 0x20	; 32
 322:	79 f0       	breq	.+30     	; 0x342 <vfprintf+0xb0>
 324:	83 32       	cpi	r24, 0x23	; 35
 326:	a1 f4       	brne	.+40     	; 0x350 <vfprintf+0xbe>
 328:	23 2d       	mov	r18, r3
 32a:	20 61       	ori	r18, 0x10	; 16
 32c:	1d c0       	rjmp	.+58     	; 0x368 <vfprintf+0xd6>
 32e:	8d 32       	cpi	r24, 0x2D	; 45
 330:	61 f0       	breq	.+24     	; 0x34a <vfprintf+0xb8>
 332:	80 33       	cpi	r24, 0x30	; 48
 334:	69 f4       	brne	.+26     	; 0x350 <vfprintf+0xbe>
 336:	23 2d       	mov	r18, r3
 338:	21 60       	ori	r18, 0x01	; 1
 33a:	16 c0       	rjmp	.+44     	; 0x368 <vfprintf+0xd6>
 33c:	83 2d       	mov	r24, r3
 33e:	82 60       	ori	r24, 0x02	; 2
 340:	38 2e       	mov	r3, r24
 342:	e3 2d       	mov	r30, r3
 344:	e4 60       	ori	r30, 0x04	; 4
 346:	3e 2e       	mov	r3, r30
 348:	2a c0       	rjmp	.+84     	; 0x39e <vfprintf+0x10c>
 34a:	f3 2d       	mov	r31, r3
 34c:	f8 60       	ori	r31, 0x08	; 8
 34e:	1d c0       	rjmp	.+58     	; 0x38a <vfprintf+0xf8>
 350:	37 fc       	sbrc	r3, 7
 352:	2d c0       	rjmp	.+90     	; 0x3ae <vfprintf+0x11c>
 354:	20 ed       	ldi	r18, 0xD0	; 208
 356:	28 0f       	add	r18, r24
 358:	2a 30       	cpi	r18, 0x0A	; 10
 35a:	40 f0       	brcs	.+16     	; 0x36c <vfprintf+0xda>
 35c:	8e 32       	cpi	r24, 0x2E	; 46
 35e:	b9 f4       	brne	.+46     	; 0x38e <vfprintf+0xfc>
 360:	36 fc       	sbrc	r3, 6
 362:	75 c1       	rjmp	.+746    	; 0x64e <__LOCK_REGION_LENGTH__+0x24e>
 364:	23 2d       	mov	r18, r3
 366:	20 64       	ori	r18, 0x40	; 64
 368:	32 2e       	mov	r3, r18
 36a:	19 c0       	rjmp	.+50     	; 0x39e <vfprintf+0x10c>
 36c:	36 fe       	sbrs	r3, 6
 36e:	06 c0       	rjmp	.+12     	; 0x37c <vfprintf+0xea>
 370:	8a e0       	ldi	r24, 0x0A	; 10
 372:	98 9e       	mul	r9, r24
 374:	20 0d       	add	r18, r0
 376:	11 24       	eor	r1, r1
 378:	92 2e       	mov	r9, r18
 37a:	11 c0       	rjmp	.+34     	; 0x39e <vfprintf+0x10c>
 37c:	ea e0       	ldi	r30, 0x0A	; 10
 37e:	2e 9e       	mul	r2, r30
 380:	20 0d       	add	r18, r0
 382:	11 24       	eor	r1, r1
 384:	22 2e       	mov	r2, r18
 386:	f3 2d       	mov	r31, r3
 388:	f0 62       	ori	r31, 0x20	; 32
 38a:	3f 2e       	mov	r3, r31
 38c:	08 c0       	rjmp	.+16     	; 0x39e <vfprintf+0x10c>
 38e:	8c 36       	cpi	r24, 0x6C	; 108
 390:	21 f4       	brne	.+8      	; 0x39a <vfprintf+0x108>
 392:	83 2d       	mov	r24, r3
 394:	80 68       	ori	r24, 0x80	; 128
 396:	38 2e       	mov	r3, r24
 398:	02 c0       	rjmp	.+4      	; 0x39e <vfprintf+0x10c>
 39a:	88 36       	cpi	r24, 0x68	; 104
 39c:	41 f4       	brne	.+16     	; 0x3ae <vfprintf+0x11c>
 39e:	f7 01       	movw	r30, r14
 3a0:	93 fd       	sbrc	r25, 3
 3a2:	85 91       	lpm	r24, Z+
 3a4:	93 ff       	sbrs	r25, 3
 3a6:	81 91       	ld	r24, Z+
 3a8:	7f 01       	movw	r14, r30
 3aa:	81 11       	cpse	r24, r1
 3ac:	b3 cf       	rjmp	.-154    	; 0x314 <vfprintf+0x82>
 3ae:	98 2f       	mov	r25, r24
 3b0:	9f 7d       	andi	r25, 0xDF	; 223
 3b2:	95 54       	subi	r25, 0x45	; 69
 3b4:	93 30       	cpi	r25, 0x03	; 3
 3b6:	28 f4       	brcc	.+10     	; 0x3c2 <vfprintf+0x130>
 3b8:	0c 5f       	subi	r16, 0xFC	; 252
 3ba:	1f 4f       	sbci	r17, 0xFF	; 255
 3bc:	9f e3       	ldi	r25, 0x3F	; 63
 3be:	99 83       	std	Y+1, r25	; 0x01
 3c0:	0d c0       	rjmp	.+26     	; 0x3dc <vfprintf+0x14a>
 3c2:	83 36       	cpi	r24, 0x63	; 99
 3c4:	31 f0       	breq	.+12     	; 0x3d2 <vfprintf+0x140>
 3c6:	83 37       	cpi	r24, 0x73	; 115
 3c8:	71 f0       	breq	.+28     	; 0x3e6 <vfprintf+0x154>
 3ca:	83 35       	cpi	r24, 0x53	; 83
 3cc:	09 f0       	breq	.+2      	; 0x3d0 <vfprintf+0x13e>
 3ce:	55 c0       	rjmp	.+170    	; 0x47a <__LOCK_REGION_LENGTH__+0x7a>
 3d0:	20 c0       	rjmp	.+64     	; 0x412 <__LOCK_REGION_LENGTH__+0x12>
 3d2:	f8 01       	movw	r30, r16
 3d4:	80 81       	ld	r24, Z
 3d6:	89 83       	std	Y+1, r24	; 0x01
 3d8:	0e 5f       	subi	r16, 0xFE	; 254
 3da:	1f 4f       	sbci	r17, 0xFF	; 255
 3dc:	88 24       	eor	r8, r8
 3de:	83 94       	inc	r8
 3e0:	91 2c       	mov	r9, r1
 3e2:	53 01       	movw	r10, r6
 3e4:	12 c0       	rjmp	.+36     	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
 3e6:	28 01       	movw	r4, r16
 3e8:	f2 e0       	ldi	r31, 0x02	; 2
 3ea:	4f 0e       	add	r4, r31
 3ec:	51 1c       	adc	r5, r1
 3ee:	f8 01       	movw	r30, r16
 3f0:	a0 80       	ld	r10, Z
 3f2:	b1 80       	ldd	r11, Z+1	; 0x01
 3f4:	36 fe       	sbrs	r3, 6
 3f6:	03 c0       	rjmp	.+6      	; 0x3fe <vfprintf+0x16c>
 3f8:	69 2d       	mov	r22, r9
 3fa:	70 e0       	ldi	r23, 0x00	; 0
 3fc:	02 c0       	rjmp	.+4      	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
 3fe:	6f ef       	ldi	r22, 0xFF	; 255
 400:	7f ef       	ldi	r23, 0xFF	; 255
 402:	c5 01       	movw	r24, r10
 404:	4e d1       	rcall	.+668    	; 0x6a2 <strnlen>
 406:	4c 01       	movw	r8, r24
 408:	82 01       	movw	r16, r4
 40a:	f3 2d       	mov	r31, r3
 40c:	ff 77       	andi	r31, 0x7F	; 127
 40e:	3f 2e       	mov	r3, r31
 410:	15 c0       	rjmp	.+42     	; 0x43c <__LOCK_REGION_LENGTH__+0x3c>
 412:	28 01       	movw	r4, r16
 414:	22 e0       	ldi	r18, 0x02	; 2
 416:	42 0e       	add	r4, r18
 418:	51 1c       	adc	r5, r1
 41a:	f8 01       	movw	r30, r16
 41c:	a0 80       	ld	r10, Z
 41e:	b1 80       	ldd	r11, Z+1	; 0x01
 420:	36 fe       	sbrs	r3, 6
 422:	03 c0       	rjmp	.+6      	; 0x42a <__LOCK_REGION_LENGTH__+0x2a>
 424:	69 2d       	mov	r22, r9
 426:	70 e0       	ldi	r23, 0x00	; 0
 428:	02 c0       	rjmp	.+4      	; 0x42e <__LOCK_REGION_LENGTH__+0x2e>
 42a:	6f ef       	ldi	r22, 0xFF	; 255
 42c:	7f ef       	ldi	r23, 0xFF	; 255
 42e:	c5 01       	movw	r24, r10
 430:	2d d1       	rcall	.+602    	; 0x68c <strnlen_P>
 432:	4c 01       	movw	r8, r24
 434:	f3 2d       	mov	r31, r3
 436:	f0 68       	ori	r31, 0x80	; 128
 438:	3f 2e       	mov	r3, r31
 43a:	82 01       	movw	r16, r4
 43c:	33 fc       	sbrc	r3, 3
 43e:	19 c0       	rjmp	.+50     	; 0x472 <__LOCK_REGION_LENGTH__+0x72>
 440:	82 2d       	mov	r24, r2
 442:	90 e0       	ldi	r25, 0x00	; 0
 444:	88 16       	cp	r8, r24
 446:	99 06       	cpc	r9, r25
 448:	a0 f4       	brcc	.+40     	; 0x472 <__LOCK_REGION_LENGTH__+0x72>
 44a:	b6 01       	movw	r22, r12
 44c:	80 e2       	ldi	r24, 0x20	; 32
 44e:	90 e0       	ldi	r25, 0x00	; 0
 450:	33 d1       	rcall	.+614    	; 0x6b8 <fputc>
 452:	2a 94       	dec	r2
 454:	f5 cf       	rjmp	.-22     	; 0x440 <__LOCK_REGION_LENGTH__+0x40>
 456:	f5 01       	movw	r30, r10
 458:	37 fc       	sbrc	r3, 7
 45a:	85 91       	lpm	r24, Z+
 45c:	37 fe       	sbrs	r3, 7
 45e:	81 91       	ld	r24, Z+
 460:	5f 01       	movw	r10, r30
 462:	b6 01       	movw	r22, r12
 464:	90 e0       	ldi	r25, 0x00	; 0
 466:	28 d1       	rcall	.+592    	; 0x6b8 <fputc>
 468:	21 10       	cpse	r2, r1
 46a:	2a 94       	dec	r2
 46c:	21 e0       	ldi	r18, 0x01	; 1
 46e:	82 1a       	sub	r8, r18
 470:	91 08       	sbc	r9, r1
 472:	81 14       	cp	r8, r1
 474:	91 04       	cpc	r9, r1
 476:	79 f7       	brne	.-34     	; 0x456 <__LOCK_REGION_LENGTH__+0x56>
 478:	e1 c0       	rjmp	.+450    	; 0x63c <__LOCK_REGION_LENGTH__+0x23c>
 47a:	84 36       	cpi	r24, 0x64	; 100
 47c:	11 f0       	breq	.+4      	; 0x482 <__LOCK_REGION_LENGTH__+0x82>
 47e:	89 36       	cpi	r24, 0x69	; 105
 480:	39 f5       	brne	.+78     	; 0x4d0 <__LOCK_REGION_LENGTH__+0xd0>
 482:	f8 01       	movw	r30, r16
 484:	37 fe       	sbrs	r3, 7
 486:	07 c0       	rjmp	.+14     	; 0x496 <__LOCK_REGION_LENGTH__+0x96>
 488:	60 81       	ld	r22, Z
 48a:	71 81       	ldd	r23, Z+1	; 0x01
 48c:	82 81       	ldd	r24, Z+2	; 0x02
 48e:	93 81       	ldd	r25, Z+3	; 0x03
 490:	0c 5f       	subi	r16, 0xFC	; 252
 492:	1f 4f       	sbci	r17, 0xFF	; 255
 494:	08 c0       	rjmp	.+16     	; 0x4a6 <__LOCK_REGION_LENGTH__+0xa6>
 496:	60 81       	ld	r22, Z
 498:	71 81       	ldd	r23, Z+1	; 0x01
 49a:	07 2e       	mov	r0, r23
 49c:	00 0c       	add	r0, r0
 49e:	88 0b       	sbc	r24, r24
 4a0:	99 0b       	sbc	r25, r25
 4a2:	0e 5f       	subi	r16, 0xFE	; 254
 4a4:	1f 4f       	sbci	r17, 0xFF	; 255
 4a6:	f3 2d       	mov	r31, r3
 4a8:	ff 76       	andi	r31, 0x6F	; 111
 4aa:	3f 2e       	mov	r3, r31
 4ac:	97 ff       	sbrs	r25, 7
 4ae:	09 c0       	rjmp	.+18     	; 0x4c2 <__LOCK_REGION_LENGTH__+0xc2>
 4b0:	90 95       	com	r25
 4b2:	80 95       	com	r24
 4b4:	70 95       	com	r23
 4b6:	61 95       	neg	r22
 4b8:	7f 4f       	sbci	r23, 0xFF	; 255
 4ba:	8f 4f       	sbci	r24, 0xFF	; 255
 4bc:	9f 4f       	sbci	r25, 0xFF	; 255
 4be:	f0 68       	ori	r31, 0x80	; 128
 4c0:	3f 2e       	mov	r3, r31
 4c2:	2a e0       	ldi	r18, 0x0A	; 10
 4c4:	30 e0       	ldi	r19, 0x00	; 0
 4c6:	a3 01       	movw	r20, r6
 4c8:	33 d1       	rcall	.+614    	; 0x730 <__ultoa_invert>
 4ca:	88 2e       	mov	r8, r24
 4cc:	86 18       	sub	r8, r6
 4ce:	44 c0       	rjmp	.+136    	; 0x558 <__LOCK_REGION_LENGTH__+0x158>
 4d0:	85 37       	cpi	r24, 0x75	; 117
 4d2:	31 f4       	brne	.+12     	; 0x4e0 <__LOCK_REGION_LENGTH__+0xe0>
 4d4:	23 2d       	mov	r18, r3
 4d6:	2f 7e       	andi	r18, 0xEF	; 239
 4d8:	b2 2e       	mov	r11, r18
 4da:	2a e0       	ldi	r18, 0x0A	; 10
 4dc:	30 e0       	ldi	r19, 0x00	; 0
 4de:	25 c0       	rjmp	.+74     	; 0x52a <__LOCK_REGION_LENGTH__+0x12a>
 4e0:	93 2d       	mov	r25, r3
 4e2:	99 7f       	andi	r25, 0xF9	; 249
 4e4:	b9 2e       	mov	r11, r25
 4e6:	8f 36       	cpi	r24, 0x6F	; 111
 4e8:	c1 f0       	breq	.+48     	; 0x51a <__LOCK_REGION_LENGTH__+0x11a>
 4ea:	18 f4       	brcc	.+6      	; 0x4f2 <__LOCK_REGION_LENGTH__+0xf2>
 4ec:	88 35       	cpi	r24, 0x58	; 88
 4ee:	79 f0       	breq	.+30     	; 0x50e <__LOCK_REGION_LENGTH__+0x10e>
 4f0:	ae c0       	rjmp	.+348    	; 0x64e <__LOCK_REGION_LENGTH__+0x24e>
 4f2:	80 37       	cpi	r24, 0x70	; 112
 4f4:	19 f0       	breq	.+6      	; 0x4fc <__LOCK_REGION_LENGTH__+0xfc>
 4f6:	88 37       	cpi	r24, 0x78	; 120
 4f8:	21 f0       	breq	.+8      	; 0x502 <__LOCK_REGION_LENGTH__+0x102>
 4fa:	a9 c0       	rjmp	.+338    	; 0x64e <__LOCK_REGION_LENGTH__+0x24e>
 4fc:	e9 2f       	mov	r30, r25
 4fe:	e0 61       	ori	r30, 0x10	; 16
 500:	be 2e       	mov	r11, r30
 502:	b4 fe       	sbrs	r11, 4
 504:	0d c0       	rjmp	.+26     	; 0x520 <__LOCK_REGION_LENGTH__+0x120>
 506:	fb 2d       	mov	r31, r11
 508:	f4 60       	ori	r31, 0x04	; 4
 50a:	bf 2e       	mov	r11, r31
 50c:	09 c0       	rjmp	.+18     	; 0x520 <__LOCK_REGION_LENGTH__+0x120>
 50e:	34 fe       	sbrs	r3, 4
 510:	0a c0       	rjmp	.+20     	; 0x526 <__LOCK_REGION_LENGTH__+0x126>
 512:	29 2f       	mov	r18, r25
 514:	26 60       	ori	r18, 0x06	; 6
 516:	b2 2e       	mov	r11, r18
 518:	06 c0       	rjmp	.+12     	; 0x526 <__LOCK_REGION_LENGTH__+0x126>
 51a:	28 e0       	ldi	r18, 0x08	; 8
 51c:	30 e0       	ldi	r19, 0x00	; 0
 51e:	05 c0       	rjmp	.+10     	; 0x52a <__LOCK_REGION_LENGTH__+0x12a>
 520:	20 e1       	ldi	r18, 0x10	; 16
 522:	30 e0       	ldi	r19, 0x00	; 0
 524:	02 c0       	rjmp	.+4      	; 0x52a <__LOCK_REGION_LENGTH__+0x12a>
 526:	20 e1       	ldi	r18, 0x10	; 16
 528:	32 e0       	ldi	r19, 0x02	; 2
 52a:	f8 01       	movw	r30, r16
 52c:	b7 fe       	sbrs	r11, 7
 52e:	07 c0       	rjmp	.+14     	; 0x53e <__LOCK_REGION_LENGTH__+0x13e>
 530:	60 81       	ld	r22, Z
 532:	71 81       	ldd	r23, Z+1	; 0x01
 534:	82 81       	ldd	r24, Z+2	; 0x02
 536:	93 81       	ldd	r25, Z+3	; 0x03
 538:	0c 5f       	subi	r16, 0xFC	; 252
 53a:	1f 4f       	sbci	r17, 0xFF	; 255
 53c:	06 c0       	rjmp	.+12     	; 0x54a <__LOCK_REGION_LENGTH__+0x14a>
 53e:	60 81       	ld	r22, Z
 540:	71 81       	ldd	r23, Z+1	; 0x01
 542:	80 e0       	ldi	r24, 0x00	; 0
 544:	90 e0       	ldi	r25, 0x00	; 0
 546:	0e 5f       	subi	r16, 0xFE	; 254
 548:	1f 4f       	sbci	r17, 0xFF	; 255
 54a:	a3 01       	movw	r20, r6
 54c:	f1 d0       	rcall	.+482    	; 0x730 <__ultoa_invert>
 54e:	88 2e       	mov	r8, r24
 550:	86 18       	sub	r8, r6
 552:	fb 2d       	mov	r31, r11
 554:	ff 77       	andi	r31, 0x7F	; 127
 556:	3f 2e       	mov	r3, r31
 558:	36 fe       	sbrs	r3, 6
 55a:	0d c0       	rjmp	.+26     	; 0x576 <__LOCK_REGION_LENGTH__+0x176>
 55c:	23 2d       	mov	r18, r3
 55e:	2e 7f       	andi	r18, 0xFE	; 254
 560:	a2 2e       	mov	r10, r18
 562:	89 14       	cp	r8, r9
 564:	58 f4       	brcc	.+22     	; 0x57c <__LOCK_REGION_LENGTH__+0x17c>
 566:	34 fe       	sbrs	r3, 4
 568:	0b c0       	rjmp	.+22     	; 0x580 <__LOCK_REGION_LENGTH__+0x180>
 56a:	32 fc       	sbrc	r3, 2
 56c:	09 c0       	rjmp	.+18     	; 0x580 <__LOCK_REGION_LENGTH__+0x180>
 56e:	83 2d       	mov	r24, r3
 570:	8e 7e       	andi	r24, 0xEE	; 238
 572:	a8 2e       	mov	r10, r24
 574:	05 c0       	rjmp	.+10     	; 0x580 <__LOCK_REGION_LENGTH__+0x180>
 576:	b8 2c       	mov	r11, r8
 578:	a3 2c       	mov	r10, r3
 57a:	03 c0       	rjmp	.+6      	; 0x582 <__LOCK_REGION_LENGTH__+0x182>
 57c:	b8 2c       	mov	r11, r8
 57e:	01 c0       	rjmp	.+2      	; 0x582 <__LOCK_REGION_LENGTH__+0x182>
 580:	b9 2c       	mov	r11, r9
 582:	a4 fe       	sbrs	r10, 4
 584:	0f c0       	rjmp	.+30     	; 0x5a4 <__LOCK_REGION_LENGTH__+0x1a4>
 586:	fe 01       	movw	r30, r28
 588:	e8 0d       	add	r30, r8
 58a:	f1 1d       	adc	r31, r1
 58c:	80 81       	ld	r24, Z
 58e:	80 33       	cpi	r24, 0x30	; 48
 590:	21 f4       	brne	.+8      	; 0x59a <__LOCK_REGION_LENGTH__+0x19a>
 592:	9a 2d       	mov	r25, r10
 594:	99 7e       	andi	r25, 0xE9	; 233
 596:	a9 2e       	mov	r10, r25
 598:	09 c0       	rjmp	.+18     	; 0x5ac <__LOCK_REGION_LENGTH__+0x1ac>
 59a:	a2 fe       	sbrs	r10, 2
 59c:	06 c0       	rjmp	.+12     	; 0x5aa <__LOCK_REGION_LENGTH__+0x1aa>
 59e:	b3 94       	inc	r11
 5a0:	b3 94       	inc	r11
 5a2:	04 c0       	rjmp	.+8      	; 0x5ac <__LOCK_REGION_LENGTH__+0x1ac>
 5a4:	8a 2d       	mov	r24, r10
 5a6:	86 78       	andi	r24, 0x86	; 134
 5a8:	09 f0       	breq	.+2      	; 0x5ac <__LOCK_REGION_LENGTH__+0x1ac>
 5aa:	b3 94       	inc	r11
 5ac:	a3 fc       	sbrc	r10, 3
 5ae:	10 c0       	rjmp	.+32     	; 0x5d0 <__LOCK_REGION_LENGTH__+0x1d0>
 5b0:	a0 fe       	sbrs	r10, 0
 5b2:	06 c0       	rjmp	.+12     	; 0x5c0 <__LOCK_REGION_LENGTH__+0x1c0>
 5b4:	b2 14       	cp	r11, r2
 5b6:	80 f4       	brcc	.+32     	; 0x5d8 <__LOCK_REGION_LENGTH__+0x1d8>
 5b8:	28 0c       	add	r2, r8
 5ba:	92 2c       	mov	r9, r2
 5bc:	9b 18       	sub	r9, r11
 5be:	0d c0       	rjmp	.+26     	; 0x5da <__LOCK_REGION_LENGTH__+0x1da>
 5c0:	b2 14       	cp	r11, r2
 5c2:	58 f4       	brcc	.+22     	; 0x5da <__LOCK_REGION_LENGTH__+0x1da>
 5c4:	b6 01       	movw	r22, r12
 5c6:	80 e2       	ldi	r24, 0x20	; 32
 5c8:	90 e0       	ldi	r25, 0x00	; 0
 5ca:	76 d0       	rcall	.+236    	; 0x6b8 <fputc>
 5cc:	b3 94       	inc	r11
 5ce:	f8 cf       	rjmp	.-16     	; 0x5c0 <__LOCK_REGION_LENGTH__+0x1c0>
 5d0:	b2 14       	cp	r11, r2
 5d2:	18 f4       	brcc	.+6      	; 0x5da <__LOCK_REGION_LENGTH__+0x1da>
 5d4:	2b 18       	sub	r2, r11
 5d6:	02 c0       	rjmp	.+4      	; 0x5dc <__LOCK_REGION_LENGTH__+0x1dc>
 5d8:	98 2c       	mov	r9, r8
 5da:	21 2c       	mov	r2, r1
 5dc:	a4 fe       	sbrs	r10, 4
 5de:	0f c0       	rjmp	.+30     	; 0x5fe <__LOCK_REGION_LENGTH__+0x1fe>
 5e0:	b6 01       	movw	r22, r12
 5e2:	80 e3       	ldi	r24, 0x30	; 48
 5e4:	90 e0       	ldi	r25, 0x00	; 0
 5e6:	68 d0       	rcall	.+208    	; 0x6b8 <fputc>
 5e8:	a2 fe       	sbrs	r10, 2
 5ea:	16 c0       	rjmp	.+44     	; 0x618 <__LOCK_REGION_LENGTH__+0x218>
 5ec:	a1 fc       	sbrc	r10, 1
 5ee:	03 c0       	rjmp	.+6      	; 0x5f6 <__LOCK_REGION_LENGTH__+0x1f6>
 5f0:	88 e7       	ldi	r24, 0x78	; 120
 5f2:	90 e0       	ldi	r25, 0x00	; 0
 5f4:	02 c0       	rjmp	.+4      	; 0x5fa <__LOCK_REGION_LENGTH__+0x1fa>
 5f6:	88 e5       	ldi	r24, 0x58	; 88
 5f8:	90 e0       	ldi	r25, 0x00	; 0
 5fa:	b6 01       	movw	r22, r12
 5fc:	0c c0       	rjmp	.+24     	; 0x616 <__LOCK_REGION_LENGTH__+0x216>
 5fe:	8a 2d       	mov	r24, r10
 600:	86 78       	andi	r24, 0x86	; 134
 602:	51 f0       	breq	.+20     	; 0x618 <__LOCK_REGION_LENGTH__+0x218>
 604:	a1 fe       	sbrs	r10, 1
 606:	02 c0       	rjmp	.+4      	; 0x60c <__LOCK_REGION_LENGTH__+0x20c>
 608:	8b e2       	ldi	r24, 0x2B	; 43
 60a:	01 c0       	rjmp	.+2      	; 0x60e <__LOCK_REGION_LENGTH__+0x20e>
 60c:	80 e2       	ldi	r24, 0x20	; 32
 60e:	a7 fc       	sbrc	r10, 7
 610:	8d e2       	ldi	r24, 0x2D	; 45
 612:	b6 01       	movw	r22, r12
 614:	90 e0       	ldi	r25, 0x00	; 0
 616:	50 d0       	rcall	.+160    	; 0x6b8 <fputc>
 618:	89 14       	cp	r8, r9
 61a:	30 f4       	brcc	.+12     	; 0x628 <__LOCK_REGION_LENGTH__+0x228>
 61c:	b6 01       	movw	r22, r12
 61e:	80 e3       	ldi	r24, 0x30	; 48
 620:	90 e0       	ldi	r25, 0x00	; 0
 622:	4a d0       	rcall	.+148    	; 0x6b8 <fputc>
 624:	9a 94       	dec	r9
 626:	f8 cf       	rjmp	.-16     	; 0x618 <__LOCK_REGION_LENGTH__+0x218>
 628:	8a 94       	dec	r8
 62a:	f3 01       	movw	r30, r6
 62c:	e8 0d       	add	r30, r8
 62e:	f1 1d       	adc	r31, r1
 630:	80 81       	ld	r24, Z
 632:	b6 01       	movw	r22, r12
 634:	90 e0       	ldi	r25, 0x00	; 0
 636:	40 d0       	rcall	.+128    	; 0x6b8 <fputc>
 638:	81 10       	cpse	r8, r1
 63a:	f6 cf       	rjmp	.-20     	; 0x628 <__LOCK_REGION_LENGTH__+0x228>
 63c:	22 20       	and	r2, r2
 63e:	09 f4       	brne	.+2      	; 0x642 <__LOCK_REGION_LENGTH__+0x242>
 640:	4e ce       	rjmp	.-868    	; 0x2de <vfprintf+0x4c>
 642:	b6 01       	movw	r22, r12
 644:	80 e2       	ldi	r24, 0x20	; 32
 646:	90 e0       	ldi	r25, 0x00	; 0
 648:	37 d0       	rcall	.+110    	; 0x6b8 <fputc>
 64a:	2a 94       	dec	r2
 64c:	f7 cf       	rjmp	.-18     	; 0x63c <__LOCK_REGION_LENGTH__+0x23c>
 64e:	f6 01       	movw	r30, r12
 650:	86 81       	ldd	r24, Z+6	; 0x06
 652:	97 81       	ldd	r25, Z+7	; 0x07
 654:	02 c0       	rjmp	.+4      	; 0x65a <__LOCK_REGION_LENGTH__+0x25a>
 656:	8f ef       	ldi	r24, 0xFF	; 255
 658:	9f ef       	ldi	r25, 0xFF	; 255
 65a:	2b 96       	adiw	r28, 0x0b	; 11
 65c:	0f b6       	in	r0, 0x3f	; 63
 65e:	f8 94       	cli
 660:	de bf       	out	0x3e, r29	; 62
 662:	0f be       	out	0x3f, r0	; 63
 664:	cd bf       	out	0x3d, r28	; 61
 666:	df 91       	pop	r29
 668:	cf 91       	pop	r28
 66a:	1f 91       	pop	r17
 66c:	0f 91       	pop	r16
 66e:	ff 90       	pop	r15
 670:	ef 90       	pop	r14
 672:	df 90       	pop	r13
 674:	cf 90       	pop	r12
 676:	bf 90       	pop	r11
 678:	af 90       	pop	r10
 67a:	9f 90       	pop	r9
 67c:	8f 90       	pop	r8
 67e:	7f 90       	pop	r7
 680:	6f 90       	pop	r6
 682:	5f 90       	pop	r5
 684:	4f 90       	pop	r4
 686:	3f 90       	pop	r3
 688:	2f 90       	pop	r2
 68a:	08 95       	ret

0000068c <strnlen_P>:
 68c:	fc 01       	movw	r30, r24
 68e:	05 90       	lpm	r0, Z+
 690:	61 50       	subi	r22, 0x01	; 1
 692:	70 40       	sbci	r23, 0x00	; 0
 694:	01 10       	cpse	r0, r1
 696:	d8 f7       	brcc	.-10     	; 0x68e <strnlen_P+0x2>
 698:	80 95       	com	r24
 69a:	90 95       	com	r25
 69c:	8e 0f       	add	r24, r30
 69e:	9f 1f       	adc	r25, r31
 6a0:	08 95       	ret

000006a2 <strnlen>:
 6a2:	fc 01       	movw	r30, r24
 6a4:	61 50       	subi	r22, 0x01	; 1
 6a6:	70 40       	sbci	r23, 0x00	; 0
 6a8:	01 90       	ld	r0, Z+
 6aa:	01 10       	cpse	r0, r1
 6ac:	d8 f7       	brcc	.-10     	; 0x6a4 <strnlen+0x2>
 6ae:	80 95       	com	r24
 6b0:	90 95       	com	r25
 6b2:	8e 0f       	add	r24, r30
 6b4:	9f 1f       	adc	r25, r31
 6b6:	08 95       	ret

000006b8 <fputc>:
 6b8:	0f 93       	push	r16
 6ba:	1f 93       	push	r17
 6bc:	cf 93       	push	r28
 6be:	df 93       	push	r29
 6c0:	fb 01       	movw	r30, r22
 6c2:	23 81       	ldd	r18, Z+3	; 0x03
 6c4:	21 fd       	sbrc	r18, 1
 6c6:	03 c0       	rjmp	.+6      	; 0x6ce <fputc+0x16>
 6c8:	8f ef       	ldi	r24, 0xFF	; 255
 6ca:	9f ef       	ldi	r25, 0xFF	; 255
 6cc:	2c c0       	rjmp	.+88     	; 0x726 <fputc+0x6e>
 6ce:	22 ff       	sbrs	r18, 2
 6d0:	16 c0       	rjmp	.+44     	; 0x6fe <fputc+0x46>
 6d2:	46 81       	ldd	r20, Z+6	; 0x06
 6d4:	57 81       	ldd	r21, Z+7	; 0x07
 6d6:	24 81       	ldd	r18, Z+4	; 0x04
 6d8:	35 81       	ldd	r19, Z+5	; 0x05
 6da:	42 17       	cp	r20, r18
 6dc:	53 07       	cpc	r21, r19
 6de:	44 f4       	brge	.+16     	; 0x6f0 <fputc+0x38>
 6e0:	a0 81       	ld	r26, Z
 6e2:	b1 81       	ldd	r27, Z+1	; 0x01
 6e4:	9d 01       	movw	r18, r26
 6e6:	2f 5f       	subi	r18, 0xFF	; 255
 6e8:	3f 4f       	sbci	r19, 0xFF	; 255
 6ea:	31 83       	std	Z+1, r19	; 0x01
 6ec:	20 83       	st	Z, r18
 6ee:	8c 93       	st	X, r24
 6f0:	26 81       	ldd	r18, Z+6	; 0x06
 6f2:	37 81       	ldd	r19, Z+7	; 0x07
 6f4:	2f 5f       	subi	r18, 0xFF	; 255
 6f6:	3f 4f       	sbci	r19, 0xFF	; 255
 6f8:	37 83       	std	Z+7, r19	; 0x07
 6fa:	26 83       	std	Z+6, r18	; 0x06
 6fc:	14 c0       	rjmp	.+40     	; 0x726 <fputc+0x6e>
 6fe:	8b 01       	movw	r16, r22
 700:	ec 01       	movw	r28, r24
 702:	fb 01       	movw	r30, r22
 704:	00 84       	ldd	r0, Z+8	; 0x08
 706:	f1 85       	ldd	r31, Z+9	; 0x09
 708:	e0 2d       	mov	r30, r0
 70a:	09 95       	icall
 70c:	89 2b       	or	r24, r25
 70e:	e1 f6       	brne	.-72     	; 0x6c8 <fputc+0x10>
 710:	d8 01       	movw	r26, r16
 712:	16 96       	adiw	r26, 0x06	; 6
 714:	8d 91       	ld	r24, X+
 716:	9c 91       	ld	r25, X
 718:	17 97       	sbiw	r26, 0x07	; 7
 71a:	01 96       	adiw	r24, 0x01	; 1
 71c:	17 96       	adiw	r26, 0x07	; 7
 71e:	9c 93       	st	X, r25
 720:	8e 93       	st	-X, r24
 722:	16 97       	sbiw	r26, 0x06	; 6
 724:	ce 01       	movw	r24, r28
 726:	df 91       	pop	r29
 728:	cf 91       	pop	r28
 72a:	1f 91       	pop	r17
 72c:	0f 91       	pop	r16
 72e:	08 95       	ret

00000730 <__ultoa_invert>:
 730:	fa 01       	movw	r30, r20
 732:	aa 27       	eor	r26, r26
 734:	28 30       	cpi	r18, 0x08	; 8
 736:	51 f1       	breq	.+84     	; 0x78c <__ultoa_invert+0x5c>
 738:	20 31       	cpi	r18, 0x10	; 16
 73a:	81 f1       	breq	.+96     	; 0x79c <__ultoa_invert+0x6c>
 73c:	e8 94       	clt
 73e:	6f 93       	push	r22
 740:	6e 7f       	andi	r22, 0xFE	; 254
 742:	6e 5f       	subi	r22, 0xFE	; 254
 744:	7f 4f       	sbci	r23, 0xFF	; 255
 746:	8f 4f       	sbci	r24, 0xFF	; 255
 748:	9f 4f       	sbci	r25, 0xFF	; 255
 74a:	af 4f       	sbci	r26, 0xFF	; 255
 74c:	b1 e0       	ldi	r27, 0x01	; 1
 74e:	3e d0       	rcall	.+124    	; 0x7cc <__ultoa_invert+0x9c>
 750:	b4 e0       	ldi	r27, 0x04	; 4
 752:	3c d0       	rcall	.+120    	; 0x7cc <__ultoa_invert+0x9c>
 754:	67 0f       	add	r22, r23
 756:	78 1f       	adc	r23, r24
 758:	89 1f       	adc	r24, r25
 75a:	9a 1f       	adc	r25, r26
 75c:	a1 1d       	adc	r26, r1
 75e:	68 0f       	add	r22, r24
 760:	79 1f       	adc	r23, r25
 762:	8a 1f       	adc	r24, r26
 764:	91 1d       	adc	r25, r1
 766:	a1 1d       	adc	r26, r1
 768:	6a 0f       	add	r22, r26
 76a:	71 1d       	adc	r23, r1
 76c:	81 1d       	adc	r24, r1
 76e:	91 1d       	adc	r25, r1
 770:	a1 1d       	adc	r26, r1
 772:	20 d0       	rcall	.+64     	; 0x7b4 <__ultoa_invert+0x84>
 774:	09 f4       	brne	.+2      	; 0x778 <__ultoa_invert+0x48>
 776:	68 94       	set
 778:	3f 91       	pop	r19
 77a:	2a e0       	ldi	r18, 0x0A	; 10
 77c:	26 9f       	mul	r18, r22
 77e:	11 24       	eor	r1, r1
 780:	30 19       	sub	r19, r0
 782:	30 5d       	subi	r19, 0xD0	; 208
 784:	31 93       	st	Z+, r19
 786:	de f6       	brtc	.-74     	; 0x73e <__ultoa_invert+0xe>
 788:	cf 01       	movw	r24, r30
 78a:	08 95       	ret
 78c:	46 2f       	mov	r20, r22
 78e:	47 70       	andi	r20, 0x07	; 7
 790:	40 5d       	subi	r20, 0xD0	; 208
 792:	41 93       	st	Z+, r20
 794:	b3 e0       	ldi	r27, 0x03	; 3
 796:	0f d0       	rcall	.+30     	; 0x7b6 <__ultoa_invert+0x86>
 798:	c9 f7       	brne	.-14     	; 0x78c <__ultoa_invert+0x5c>
 79a:	f6 cf       	rjmp	.-20     	; 0x788 <__ultoa_invert+0x58>
 79c:	46 2f       	mov	r20, r22
 79e:	4f 70       	andi	r20, 0x0F	; 15
 7a0:	40 5d       	subi	r20, 0xD0	; 208
 7a2:	4a 33       	cpi	r20, 0x3A	; 58
 7a4:	18 f0       	brcs	.+6      	; 0x7ac <__ultoa_invert+0x7c>
 7a6:	49 5d       	subi	r20, 0xD9	; 217
 7a8:	31 fd       	sbrc	r19, 1
 7aa:	40 52       	subi	r20, 0x20	; 32
 7ac:	41 93       	st	Z+, r20
 7ae:	02 d0       	rcall	.+4      	; 0x7b4 <__ultoa_invert+0x84>
 7b0:	a9 f7       	brne	.-22     	; 0x79c <__ultoa_invert+0x6c>
 7b2:	ea cf       	rjmp	.-44     	; 0x788 <__ultoa_invert+0x58>
 7b4:	b4 e0       	ldi	r27, 0x04	; 4
 7b6:	a6 95       	lsr	r26
 7b8:	97 95       	ror	r25
 7ba:	87 95       	ror	r24
 7bc:	77 95       	ror	r23
 7be:	67 95       	ror	r22
 7c0:	ba 95       	dec	r27
 7c2:	c9 f7       	brne	.-14     	; 0x7b6 <__ultoa_invert+0x86>
 7c4:	00 97       	sbiw	r24, 0x00	; 0
 7c6:	61 05       	cpc	r22, r1
 7c8:	71 05       	cpc	r23, r1
 7ca:	08 95       	ret
 7cc:	9b 01       	movw	r18, r22
 7ce:	ac 01       	movw	r20, r24
 7d0:	0a 2e       	mov	r0, r26
 7d2:	06 94       	lsr	r0
 7d4:	57 95       	ror	r21
 7d6:	47 95       	ror	r20
 7d8:	37 95       	ror	r19
 7da:	27 95       	ror	r18
 7dc:	ba 95       	dec	r27
 7de:	c9 f7       	brne	.-14     	; 0x7d2 <__ultoa_invert+0xa2>
 7e0:	62 0f       	add	r22, r18
 7e2:	73 1f       	adc	r23, r19
 7e4:	84 1f       	adc	r24, r20
 7e6:	95 1f       	adc	r25, r21
 7e8:	a0 1d       	adc	r26, r0
 7ea:	08 95       	ret

000007ec <_exit>:
 7ec:	f8 94       	cli

000007ee <__stop_program>:
 7ee:	ff cf       	rjmp	.-2      	; 0x7ee <__stop_program>
