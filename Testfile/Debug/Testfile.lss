
Testfile.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000003da  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000386  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  000003da  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  0000040c  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000080  00000000  00000000  00000448  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000de0  00000000  00000000  000004c8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000008f5  00000000  00000000  000012a8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000005ae  00000000  00000000  00001b9d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  0000010c  00000000  00000000  0000214c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000517  00000000  00000000  00002258  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000715  00000000  00000000  0000276f  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000070  00000000  00000000  00002e84  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	4b c0       	rjmp	.+150    	; 0x9c <__bad_interrupt>
   6:	00 00       	nop
   8:	49 c0       	rjmp	.+146    	; 0x9c <__bad_interrupt>
   a:	00 00       	nop
   c:	47 c0       	rjmp	.+142    	; 0x9c <__bad_interrupt>
   e:	00 00       	nop
  10:	45 c0       	rjmp	.+138    	; 0x9c <__bad_interrupt>
  12:	00 00       	nop
  14:	43 c0       	rjmp	.+134    	; 0x9c <__bad_interrupt>
  16:	00 00       	nop
  18:	41 c0       	rjmp	.+130    	; 0x9c <__bad_interrupt>
  1a:	00 00       	nop
  1c:	3f c0       	rjmp	.+126    	; 0x9c <__bad_interrupt>
  1e:	00 00       	nop
  20:	3d c0       	rjmp	.+122    	; 0x9c <__bad_interrupt>
  22:	00 00       	nop
  24:	3b c0       	rjmp	.+118    	; 0x9c <__bad_interrupt>
  26:	00 00       	nop
  28:	39 c0       	rjmp	.+114    	; 0x9c <__bad_interrupt>
  2a:	00 00       	nop
  2c:	37 c0       	rjmp	.+110    	; 0x9c <__bad_interrupt>
  2e:	00 00       	nop
  30:	35 c0       	rjmp	.+106    	; 0x9c <__bad_interrupt>
  32:	00 00       	nop
  34:	33 c0       	rjmp	.+102    	; 0x9c <__bad_interrupt>
  36:	00 00       	nop
  38:	31 c0       	rjmp	.+98     	; 0x9c <__bad_interrupt>
  3a:	00 00       	nop
  3c:	2f c0       	rjmp	.+94     	; 0x9c <__bad_interrupt>
  3e:	00 00       	nop
  40:	2d c0       	rjmp	.+90     	; 0x9c <__bad_interrupt>
  42:	00 00       	nop
  44:	2b c0       	rjmp	.+86     	; 0x9c <__bad_interrupt>
  46:	00 00       	nop
  48:	29 c0       	rjmp	.+82     	; 0x9c <__bad_interrupt>
  4a:	00 00       	nop
  4c:	27 c0       	rjmp	.+78     	; 0x9c <__bad_interrupt>
  4e:	00 00       	nop
  50:	25 c0       	rjmp	.+74     	; 0x9c <__bad_interrupt>
  52:	00 00       	nop
  54:	23 c0       	rjmp	.+70     	; 0x9c <__bad_interrupt>
  56:	00 00       	nop
  58:	21 c0       	rjmp	.+66     	; 0x9c <__bad_interrupt>
  5a:	00 00       	nop
  5c:	1f c0       	rjmp	.+62     	; 0x9c <__bad_interrupt>
  5e:	00 00       	nop
  60:	1d c0       	rjmp	.+58     	; 0x9c <__bad_interrupt>
  62:	00 00       	nop
  64:	1b c0       	rjmp	.+54     	; 0x9c <__bad_interrupt>
  66:	00 00       	nop
  68:	19 c0       	rjmp	.+50     	; 0x9c <__bad_interrupt>
  6a:	00 00       	nop
  6c:	17 c0       	rjmp	.+46     	; 0x9c <__bad_interrupt>
  6e:	00 00       	nop
  70:	15 c0       	rjmp	.+42     	; 0x9c <__bad_interrupt>
  72:	00 00       	nop
  74:	13 c0       	rjmp	.+38     	; 0x9c <__bad_interrupt>
  76:	00 00       	nop
  78:	11 c0       	rjmp	.+34     	; 0x9c <__bad_interrupt>
  7a:	00 00       	nop
  7c:	0f c0       	rjmp	.+30     	; 0x9c <__bad_interrupt>
  7e:	00 00       	nop
  80:	0d c0       	rjmp	.+26     	; 0x9c <__bad_interrupt>
  82:	00 00       	nop
  84:	0b c0       	rjmp	.+22     	; 0x9c <__bad_interrupt>
  86:	00 00       	nop
  88:	09 c0       	rjmp	.+18     	; 0x9c <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61
  98:	43 d1       	rcall	.+646    	; 0x320 <main>
  9a:	73 c1       	rjmp	.+742    	; 0x382 <_exit>

0000009c <__bad_interrupt>:
  9c:	b1 cf       	rjmp	.-158    	; 0x0 <__vectors>

0000009e <spi_masterInit>:
	for (;;) {
		// Wacht tot de timer op 1 seconden zit, dan true
		if (TCNT1 >= 62496) {
			TCNT1 = 0; // Reset timer
			seconden+=0.5;
			writeLedDisplay(seconden);
  9e:	8f ef       	ldi	r24, 0xFF	; 255
  a0:	87 bb       	out	0x17, r24	; 23
  a2:	87 b3       	in	r24, 0x17	; 23
  a4:	87 7f       	andi	r24, 0xF7	; 247
  a6:	87 bb       	out	0x17, r24	; 23
  a8:	88 b3       	in	r24, 0x18	; 24
  aa:	81 60       	ori	r24, 0x01	; 1
  ac:	88 bb       	out	0x18, r24	; 24
  ae:	82 e5       	ldi	r24, 0x52	; 82
  b0:	8d b9       	out	0x0d, r24	; 13
  b2:	08 95       	ret

000000b4 <spi_write>:
  b4:	8f b9       	out	0x0f, r24	; 15
  b6:	77 9b       	sbis	0x0e, 7	; 14
  b8:	fe cf       	rjmp	.-4      	; 0xb6 <spi_write+0x2>
  ba:	08 95       	ret

000000bc <spi_slaveSelect>:
  bc:	98 b3       	in	r25, 0x18	; 24
  be:	21 e0       	ldi	r18, 0x01	; 1
  c0:	30 e0       	ldi	r19, 0x00	; 0
  c2:	02 c0       	rjmp	.+4      	; 0xc8 <spi_slaveSelect+0xc>
  c4:	22 0f       	add	r18, r18
  c6:	33 1f       	adc	r19, r19
  c8:	8a 95       	dec	r24
  ca:	e2 f7       	brpl	.-8      	; 0xc4 <spi_slaveSelect+0x8>
  cc:	20 95       	com	r18
  ce:	29 23       	and	r18, r25
  d0:	28 bb       	out	0x18, r18	; 24
  d2:	08 95       	ret

000000d4 <spi_slaveDeSelect>:
  d4:	98 b3       	in	r25, 0x18	; 24
  d6:	21 e0       	ldi	r18, 0x01	; 1
  d8:	30 e0       	ldi	r19, 0x00	; 0
  da:	02 c0       	rjmp	.+4      	; 0xe0 <spi_slaveDeSelect+0xc>
  dc:	22 0f       	add	r18, r18
  de:	33 1f       	adc	r19, r19
  e0:	8a 95       	dec	r24
  e2:	e2 f7       	brpl	.-8      	; 0xdc <spi_slaveDeSelect+0x8>
  e4:	29 2b       	or	r18, r25
  e6:	28 bb       	out	0x18, r18	; 24
  e8:	08 95       	ret

000000ea <spi_writeWord>:
  ea:	cf 93       	push	r28
  ec:	df 93       	push	r29
  ee:	d8 2f       	mov	r29, r24
  f0:	c6 2f       	mov	r28, r22
  f2:	80 e0       	ldi	r24, 0x00	; 0
  f4:	e3 df       	rcall	.-58     	; 0xbc <spi_slaveSelect>
  f6:	8d 2f       	mov	r24, r29
  f8:	dd df       	rcall	.-70     	; 0xb4 <spi_write>
  fa:	8c 2f       	mov	r24, r28
  fc:	db df       	rcall	.-74     	; 0xb4 <spi_write>
  fe:	80 e0       	ldi	r24, 0x00	; 0
 100:	e9 df       	rcall	.-46     	; 0xd4 <spi_slaveDeSelect>
 102:	df 91       	pop	r29
 104:	cf 91       	pop	r28
 106:	08 95       	ret

00000108 <displayDriverInit>:
 108:	6f ef       	ldi	r22, 0xFF	; 255
 10a:	89 e0       	ldi	r24, 0x09	; 9
 10c:	ee df       	rcall	.-36     	; 0xea <spi_writeWord>
 10e:	6f e0       	ldi	r22, 0x0F	; 15
 110:	8a e0       	ldi	r24, 0x0A	; 10
 112:	eb df       	rcall	.-42     	; 0xea <spi_writeWord>
 114:	6f e0       	ldi	r22, 0x0F	; 15
 116:	8b e0       	ldi	r24, 0x0B	; 11
 118:	e8 df       	rcall	.-48     	; 0xea <spi_writeWord>
 11a:	61 e0       	ldi	r22, 0x01	; 1
 11c:	8c e0       	ldi	r24, 0x0C	; 12
 11e:	e5 cf       	rjmp	.-54     	; 0xea <spi_writeWord>
 120:	08 95       	ret

00000122 <writeLedDisplay>:
 122:	ff 92       	push	r15
 124:	0f 93       	push	r16
 126:	1f 93       	push	r17
 128:	cf 93       	push	r28
 12a:	df 93       	push	r29
 12c:	9c 01       	movw	r18, r24
 12e:	8a 30       	cpi	r24, 0x0A	; 10
 130:	91 05       	cpc	r25, r1
 132:	40 f4       	brcc	.+16     	; 0x144 <writeLedDisplay+0x22>
 134:	f8 2e       	mov	r15, r24
 136:	cf ef       	ldi	r28, 0xFF	; 255
 138:	df ef       	ldi	r29, 0xFF	; 255
 13a:	0f ef       	ldi	r16, 0xFF	; 255
 13c:	1f ef       	ldi	r17, 0xFF	; 255
 13e:	6f ef       	ldi	r22, 0xFF	; 255
 140:	7f ef       	ldi	r23, 0xFF	; 255
 142:	9b c0       	rjmp	.+310    	; 0x27a <writeLedDisplay+0x158>
 144:	0a 97       	sbiw	r24, 0x0a	; 10
 146:	8a 35       	cpi	r24, 0x5A	; 90
 148:	91 05       	cpc	r25, r1
 14a:	60 f4       	brcc	.+24     	; 0x164 <writeLedDisplay+0x42>
 14c:	c9 01       	movw	r24, r18
 14e:	6a e0       	ldi	r22, 0x0A	; 10
 150:	70 e0       	ldi	r23, 0x00	; 0
 152:	f0 d0       	rcall	.+480    	; 0x334 <__divmodhi4>
 154:	f6 2e       	mov	r15, r22
 156:	c8 2f       	mov	r28, r24
 158:	d9 2f       	mov	r29, r25
 15a:	0f ef       	ldi	r16, 0xFF	; 255
 15c:	1f ef       	ldi	r17, 0xFF	; 255
 15e:	6f ef       	ldi	r22, 0xFF	; 255
 160:	7f ef       	ldi	r23, 0xFF	; 255
 162:	8b c0       	rjmp	.+278    	; 0x27a <writeLedDisplay+0x158>
 164:	c9 01       	movw	r24, r18
 166:	84 56       	subi	r24, 0x64	; 100
 168:	91 09       	sbc	r25, r1
 16a:	84 38       	cpi	r24, 0x84	; 132
 16c:	93 40       	sbci	r25, 0x03	; 3
 16e:	a8 f4       	brcc	.+42     	; 0x19a <writeLedDisplay+0x78>
 170:	c9 01       	movw	r24, r18
 172:	64 e6       	ldi	r22, 0x64	; 100
 174:	70 e0       	ldi	r23, 0x00	; 0
 176:	de d0       	rcall	.+444    	; 0x334 <__divmodhi4>
 178:	f6 2e       	mov	r15, r22
 17a:	ea e0       	ldi	r30, 0x0A	; 10
 17c:	f0 e0       	ldi	r31, 0x00	; 0
 17e:	c9 01       	movw	r24, r18
 180:	bf 01       	movw	r22, r30
 182:	d8 d0       	rcall	.+432    	; 0x334 <__divmodhi4>
 184:	38 2f       	mov	r19, r24
 186:	29 2f       	mov	r18, r25
 188:	cb 01       	movw	r24, r22
 18a:	bf 01       	movw	r22, r30
 18c:	d3 d0       	rcall	.+422    	; 0x334 <__divmodhi4>
 18e:	ec 01       	movw	r28, r24
 190:	03 2f       	mov	r16, r19
 192:	12 2f       	mov	r17, r18
 194:	6f ef       	ldi	r22, 0xFF	; 255
 196:	7f ef       	ldi	r23, 0xFF	; 255
 198:	70 c0       	rjmp	.+224    	; 0x27a <writeLedDisplay+0x158>
 19a:	c9 01       	movw	r24, r18
 19c:	88 5e       	subi	r24, 0xE8	; 232
 19e:	93 40       	sbci	r25, 0x03	; 3
 1a0:	88 32       	cpi	r24, 0x28	; 40
 1a2:	93 42       	sbci	r25, 0x23	; 35
 1a4:	d8 f4       	brcc	.+54     	; 0x1dc <writeLedDisplay+0xba>
 1a6:	c9 01       	movw	r24, r18
 1a8:	68 ee       	ldi	r22, 0xE8	; 232
 1aa:	73 e0       	ldi	r23, 0x03	; 3
 1ac:	c3 d0       	rcall	.+390    	; 0x334 <__divmodhi4>
 1ae:	f6 2e       	mov	r15, r22
 1b0:	c9 01       	movw	r24, r18
 1b2:	64 e6       	ldi	r22, 0x64	; 100
 1b4:	70 e0       	ldi	r23, 0x00	; 0
 1b6:	be d0       	rcall	.+380    	; 0x334 <__divmodhi4>
 1b8:	cb 01       	movw	r24, r22
 1ba:	ea e0       	ldi	r30, 0x0A	; 10
 1bc:	f0 e0       	ldi	r31, 0x00	; 0
 1be:	bf 01       	movw	r22, r30
 1c0:	b9 d0       	rcall	.+370    	; 0x334 <__divmodhi4>
 1c2:	ec 01       	movw	r28, r24
 1c4:	c9 01       	movw	r24, r18
 1c6:	bf 01       	movw	r22, r30
 1c8:	b5 d0       	rcall	.+362    	; 0x334 <__divmodhi4>
 1ca:	38 2f       	mov	r19, r24
 1cc:	29 2f       	mov	r18, r25
 1ce:	cb 01       	movw	r24, r22
 1d0:	bf 01       	movw	r22, r30
 1d2:	b0 d0       	rcall	.+352    	; 0x334 <__divmodhi4>
 1d4:	8c 01       	movw	r16, r24
 1d6:	63 2f       	mov	r22, r19
 1d8:	72 2f       	mov	r23, r18
 1da:	4f c0       	rjmp	.+158    	; 0x27a <writeLedDisplay+0x158>
 1dc:	c9 01       	movw	r24, r18
 1de:	09 96       	adiw	r24, 0x09	; 9
 1e0:	09 97       	sbiw	r24, 0x09	; 9
 1e2:	68 f4       	brcc	.+26     	; 0x1fe <writeLedDisplay+0xdc>
 1e4:	cc 27       	eor	r28, r28
 1e6:	dd 27       	eor	r29, r29
 1e8:	c2 1b       	sub	r28, r18
 1ea:	d3 0b       	sbc	r29, r19
 1ec:	0f 2e       	mov	r0, r31
 1ee:	ff e0       	ldi	r31, 0x0F	; 15
 1f0:	ff 2e       	mov	r15, r31
 1f2:	f0 2d       	mov	r31, r0
 1f4:	0f ef       	ldi	r16, 0xFF	; 255
 1f6:	1f ef       	ldi	r17, 0xFF	; 255
 1f8:	6f ef       	ldi	r22, 0xFF	; 255
 1fa:	7f ef       	ldi	r23, 0xFF	; 255
 1fc:	3e c0       	rjmp	.+124    	; 0x27a <writeLedDisplay+0x158>
 1fe:	c9 01       	movw	r24, r18
 200:	8d 59       	subi	r24, 0x9D	; 157
 202:	9f 4f       	sbci	r25, 0xFF	; 255
 204:	8a 35       	cpi	r24, 0x5A	; 90
 206:	91 05       	cpc	r25, r1
 208:	80 f4       	brcc	.+32     	; 0x22a <writeLedDisplay+0x108>
 20a:	88 27       	eor	r24, r24
 20c:	99 27       	eor	r25, r25
 20e:	82 1b       	sub	r24, r18
 210:	93 0b       	sbc	r25, r19
 212:	6a e0       	ldi	r22, 0x0A	; 10
 214:	70 e0       	ldi	r23, 0x00	; 0
 216:	8e d0       	rcall	.+284    	; 0x334 <__divmodhi4>
 218:	eb 01       	movw	r28, r22
 21a:	8c 01       	movw	r16, r24
 21c:	0f 2e       	mov	r0, r31
 21e:	ff e0       	ldi	r31, 0x0F	; 15
 220:	ff 2e       	mov	r15, r31
 222:	f0 2d       	mov	r31, r0
 224:	6f ef       	ldi	r22, 0xFF	; 255
 226:	7f ef       	ldi	r23, 0xFF	; 255
 228:	28 c0       	rjmp	.+80     	; 0x27a <writeLedDisplay+0x158>
 22a:	c9 01       	movw	r24, r18
 22c:	89 51       	subi	r24, 0x19	; 25
 22e:	9c 4f       	sbci	r25, 0xFC	; 252
 230:	84 38       	cpi	r24, 0x84	; 132
 232:	93 40       	sbci	r25, 0x03	; 3
 234:	d0 f4       	brcc	.+52     	; 0x26a <writeLedDisplay+0x148>
 236:	31 95       	neg	r19
 238:	21 95       	neg	r18
 23a:	31 09       	sbc	r19, r1
 23c:	c9 01       	movw	r24, r18
 23e:	64 e6       	ldi	r22, 0x64	; 100
 240:	70 e0       	ldi	r23, 0x00	; 0
 242:	78 d0       	rcall	.+240    	; 0x334 <__divmodhi4>
 244:	eb 01       	movw	r28, r22
 246:	ea e0       	ldi	r30, 0x0A	; 10
 248:	f0 e0       	ldi	r31, 0x00	; 0
 24a:	c9 01       	movw	r24, r18
 24c:	bf 01       	movw	r22, r30
 24e:	72 d0       	rcall	.+228    	; 0x334 <__divmodhi4>
 250:	38 2f       	mov	r19, r24
 252:	29 2f       	mov	r18, r25
 254:	cb 01       	movw	r24, r22
 256:	bf 01       	movw	r22, r30
 258:	6d d0       	rcall	.+218    	; 0x334 <__divmodhi4>
 25a:	8c 01       	movw	r16, r24
 25c:	63 2f       	mov	r22, r19
 25e:	72 2f       	mov	r23, r18
 260:	0f 2e       	mov	r0, r31
 262:	ff e0       	ldi	r31, 0x0F	; 15
 264:	ff 2e       	mov	r15, r31
 266:	f0 2d       	mov	r31, r0
 268:	08 c0       	rjmp	.+16     	; 0x27a <writeLedDisplay+0x158>
 26a:	ff 24       	eor	r15, r15
 26c:	fa 94       	dec	r15
 26e:	cf ef       	ldi	r28, 0xFF	; 255
 270:	df ef       	ldi	r29, 0xFF	; 255
 272:	0f ef       	ldi	r16, 0xFF	; 255
 274:	1f ef       	ldi	r17, 0xFF	; 255
 276:	6f ef       	ldi	r22, 0xFF	; 255
 278:	7f ef       	ldi	r23, 0xFF	; 255
 27a:	6f 3f       	cpi	r22, 0xFF	; 255
 27c:	8f ef       	ldi	r24, 0xFF	; 255
 27e:	78 07       	cpc	r23, r24
 280:	49 f0       	breq	.+18     	; 0x294 <writeLedDisplay+0x172>
 282:	81 e0       	ldi	r24, 0x01	; 1
 284:	32 df       	rcall	.-412    	; 0xea <spi_writeWord>
 286:	8f e1       	ldi	r24, 0x1F	; 31
 288:	9e e4       	ldi	r25, 0x4E	; 78
 28a:	01 97       	sbiw	r24, 0x01	; 1
 28c:	f1 f7       	brne	.-4      	; 0x28a <writeLedDisplay+0x168>
 28e:	00 c0       	rjmp	.+0      	; 0x290 <writeLedDisplay+0x16e>
 290:	00 00       	nop
 292:	09 c0       	rjmp	.+18     	; 0x2a6 <writeLedDisplay+0x184>
 294:	6f e0       	ldi	r22, 0x0F	; 15
 296:	81 e0       	ldi	r24, 0x01	; 1
 298:	28 df       	rcall	.-432    	; 0xea <spi_writeWord>
 29a:	8f e1       	ldi	r24, 0x1F	; 31
 29c:	9e e4       	ldi	r25, 0x4E	; 78
 29e:	01 97       	sbiw	r24, 0x01	; 1
 2a0:	f1 f7       	brne	.-4      	; 0x29e <writeLedDisplay+0x17c>
 2a2:	00 c0       	rjmp	.+0      	; 0x2a4 <writeLedDisplay+0x182>
 2a4:	00 00       	nop
 2a6:	0f 3f       	cpi	r16, 0xFF	; 255
 2a8:	9f ef       	ldi	r25, 0xFF	; 255
 2aa:	19 07       	cpc	r17, r25
 2ac:	51 f0       	breq	.+20     	; 0x2c2 <writeLedDisplay+0x1a0>
 2ae:	60 2f       	mov	r22, r16
 2b0:	82 e0       	ldi	r24, 0x02	; 2
 2b2:	1b df       	rcall	.-458    	; 0xea <spi_writeWord>
 2b4:	8f e1       	ldi	r24, 0x1F	; 31
 2b6:	9e e4       	ldi	r25, 0x4E	; 78
 2b8:	01 97       	sbiw	r24, 0x01	; 1
 2ba:	f1 f7       	brne	.-4      	; 0x2b8 <writeLedDisplay+0x196>
 2bc:	00 c0       	rjmp	.+0      	; 0x2be <writeLedDisplay+0x19c>
 2be:	00 00       	nop
 2c0:	09 c0       	rjmp	.+18     	; 0x2d4 <writeLedDisplay+0x1b2>
 2c2:	6f e0       	ldi	r22, 0x0F	; 15
 2c4:	82 e0       	ldi	r24, 0x02	; 2
 2c6:	11 df       	rcall	.-478    	; 0xea <spi_writeWord>
 2c8:	8f e1       	ldi	r24, 0x1F	; 31
 2ca:	9e e4       	ldi	r25, 0x4E	; 78
 2cc:	01 97       	sbiw	r24, 0x01	; 1
 2ce:	f1 f7       	brne	.-4      	; 0x2cc <writeLedDisplay+0x1aa>
 2d0:	00 c0       	rjmp	.+0      	; 0x2d2 <writeLedDisplay+0x1b0>
 2d2:	00 00       	nop
 2d4:	cf 3f       	cpi	r28, 0xFF	; 255
 2d6:	9f ef       	ldi	r25, 0xFF	; 255
 2d8:	d9 07       	cpc	r29, r25
 2da:	51 f0       	breq	.+20     	; 0x2f0 <writeLedDisplay+0x1ce>
 2dc:	6c 2f       	mov	r22, r28
 2de:	83 e0       	ldi	r24, 0x03	; 3
 2e0:	04 df       	rcall	.-504    	; 0xea <spi_writeWord>
 2e2:	8f e1       	ldi	r24, 0x1F	; 31
 2e4:	9e e4       	ldi	r25, 0x4E	; 78
 2e6:	01 97       	sbiw	r24, 0x01	; 1
 2e8:	f1 f7       	brne	.-4      	; 0x2e6 <writeLedDisplay+0x1c4>
 2ea:	00 c0       	rjmp	.+0      	; 0x2ec <writeLedDisplay+0x1ca>
 2ec:	00 00       	nop
 2ee:	09 c0       	rjmp	.+18     	; 0x302 <writeLedDisplay+0x1e0>
 2f0:	6f e0       	ldi	r22, 0x0F	; 15
 2f2:	83 e0       	ldi	r24, 0x03	; 3
 2f4:	fa de       	rcall	.-524    	; 0xea <spi_writeWord>
 2f6:	8f e1       	ldi	r24, 0x1F	; 31
 2f8:	9e e4       	ldi	r25, 0x4E	; 78
 2fa:	01 97       	sbiw	r24, 0x01	; 1
 2fc:	f1 f7       	brne	.-4      	; 0x2fa <writeLedDisplay+0x1d8>
 2fe:	00 c0       	rjmp	.+0      	; 0x300 <writeLedDisplay+0x1de>
 300:	00 00       	nop
 302:	6f 2d       	mov	r22, r15
 304:	84 e0       	ldi	r24, 0x04	; 4
 306:	f1 de       	rcall	.-542    	; 0xea <spi_writeWord>
 308:	8f e1       	ldi	r24, 0x1F	; 31
 30a:	9e e4       	ldi	r25, 0x4E	; 78
 30c:	01 97       	sbiw	r24, 0x01	; 1
 30e:	f1 f7       	brne	.-4      	; 0x30c <writeLedDisplay+0x1ea>
 310:	00 c0       	rjmp	.+0      	; 0x312 <writeLedDisplay+0x1f0>
 312:	00 00       	nop
 314:	df 91       	pop	r29
 316:	cf 91       	pop	r28
 318:	1f 91       	pop	r17
 31a:	0f 91       	pop	r16
 31c:	ff 90       	pop	r15
 31e:	08 95       	ret

00000320 <main>:

int main()
{
	// inilialize
	
	DDRB=0x01;					  	// Set PB0 pin as output for display select
 320:	81 e0       	ldi	r24, 0x01	; 1
 322:	87 bb       	out	0x17, r24	; 23
	spi_masterInit();              	// Initialize spi module
 324:	bc de       	rcall	.-648    	; 0x9e <spi_masterInit>
	displayDriverInit();            // Initialize display chip
 326:	f0 de       	rcall	.-544    	; 0x108 <displayDriverInit>
 328:	81 e0       	ldi	r24, 0x01	; 1
	
	writeLedDisplay(5633);
 32a:	96 e1       	ldi	r25, 0x16	; 22
 32c:	fa de       	rcall	.-524    	; 0x122 <writeLedDisplay>
 32e:	81 e0       	ldi	r24, 0x01	; 1
	return (1);
}
 330:	90 e0       	ldi	r25, 0x00	; 0
 332:	08 95       	ret

00000334 <__divmodhi4>:
 334:	97 fb       	bst	r25, 7
 336:	07 2e       	mov	r0, r23
 338:	16 f4       	brtc	.+4      	; 0x33e <__divmodhi4+0xa>
 33a:	00 94       	com	r0
 33c:	06 d0       	rcall	.+12     	; 0x34a <__divmodhi4_neg1>
 33e:	77 fd       	sbrc	r23, 7
 340:	08 d0       	rcall	.+16     	; 0x352 <__divmodhi4_neg2>
 342:	0b d0       	rcall	.+22     	; 0x35a <__udivmodhi4>
 344:	07 fc       	sbrc	r0, 7
 346:	05 d0       	rcall	.+10     	; 0x352 <__divmodhi4_neg2>
 348:	3e f4       	brtc	.+14     	; 0x358 <__divmodhi4_exit>

0000034a <__divmodhi4_neg1>:
 34a:	90 95       	com	r25
 34c:	81 95       	neg	r24
 34e:	9f 4f       	sbci	r25, 0xFF	; 255
 350:	08 95       	ret

00000352 <__divmodhi4_neg2>:
 352:	70 95       	com	r23
 354:	61 95       	neg	r22
 356:	7f 4f       	sbci	r23, 0xFF	; 255

00000358 <__divmodhi4_exit>:
 358:	08 95       	ret

0000035a <__udivmodhi4>:
 35a:	aa 1b       	sub	r26, r26
 35c:	bb 1b       	sub	r27, r27
 35e:	51 e1       	ldi	r21, 0x11	; 17
 360:	07 c0       	rjmp	.+14     	; 0x370 <__udivmodhi4_ep>

00000362 <__udivmodhi4_loop>:
 362:	aa 1f       	adc	r26, r26
 364:	bb 1f       	adc	r27, r27
 366:	a6 17       	cp	r26, r22
 368:	b7 07       	cpc	r27, r23
 36a:	10 f0       	brcs	.+4      	; 0x370 <__udivmodhi4_ep>
 36c:	a6 1b       	sub	r26, r22
 36e:	b7 0b       	sbc	r27, r23

00000370 <__udivmodhi4_ep>:
 370:	88 1f       	adc	r24, r24
 372:	99 1f       	adc	r25, r25
 374:	5a 95       	dec	r21
 376:	a9 f7       	brne	.-22     	; 0x362 <__udivmodhi4_loop>
 378:	80 95       	com	r24
 37a:	90 95       	com	r25
 37c:	bc 01       	movw	r22, r24
 37e:	cd 01       	movw	r24, r26
 380:	08 95       	ret

00000382 <_exit>:
 382:	f8 94       	cli

00000384 <__stop_program>:
 384:	ff cf       	rjmp	.-2      	; 0x384 <__stop_program>
