
3.B.1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000004  00800100  00000854  000008c8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000854  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      0000005c  00000000  00000000  000008cc  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000928  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000078  00000000  00000000  00000964  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000db1  00000000  00000000  000009dc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000009d7  00000000  00000000  0000178d  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000626  00000000  00000000  00002164  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000f4  00000000  00000000  0000278c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000004c6  00000000  00000000  00002880  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000003d6  00000000  00000000  00002d46  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000058  00000000  00000000  0000311c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	58 c0       	rjmp	.+176    	; 0xb6 <__bad_interrupt>
   6:	00 00       	nop
   8:	56 c0       	rjmp	.+172    	; 0xb6 <__bad_interrupt>
   a:	00 00       	nop
   c:	54 c0       	rjmp	.+168    	; 0xb6 <__bad_interrupt>
   e:	00 00       	nop
  10:	52 c0       	rjmp	.+164    	; 0xb6 <__bad_interrupt>
  12:	00 00       	nop
  14:	50 c0       	rjmp	.+160    	; 0xb6 <__bad_interrupt>
  16:	00 00       	nop
  18:	4e c0       	rjmp	.+156    	; 0xb6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	4c c0       	rjmp	.+152    	; 0xb6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	4a c0       	rjmp	.+148    	; 0xb6 <__bad_interrupt>
  22:	00 00       	nop
  24:	48 c0       	rjmp	.+144    	; 0xb6 <__bad_interrupt>
  26:	00 00       	nop
  28:	46 c0       	rjmp	.+140    	; 0xb6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	44 c0       	rjmp	.+136    	; 0xb6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	42 c0       	rjmp	.+132    	; 0xb6 <__bad_interrupt>
  32:	00 00       	nop
  34:	40 c0       	rjmp	.+128    	; 0xb6 <__bad_interrupt>
  36:	00 00       	nop
  38:	3e c0       	rjmp	.+124    	; 0xb6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	3c c0       	rjmp	.+120    	; 0xb6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	3a c0       	rjmp	.+116    	; 0xb6 <__bad_interrupt>
  42:	00 00       	nop
  44:	38 c0       	rjmp	.+112    	; 0xb6 <__bad_interrupt>
  46:	00 00       	nop
  48:	36 c0       	rjmp	.+108    	; 0xb6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	34 c0       	rjmp	.+104    	; 0xb6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	32 c0       	rjmp	.+100    	; 0xb6 <__bad_interrupt>
  52:	00 00       	nop
  54:	30 c0       	rjmp	.+96     	; 0xb6 <__bad_interrupt>
  56:	00 00       	nop
  58:	2e c0       	rjmp	.+92     	; 0xb6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	2c c0       	rjmp	.+88     	; 0xb6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	2a c0       	rjmp	.+84     	; 0xb6 <__bad_interrupt>
  62:	00 00       	nop
  64:	28 c0       	rjmp	.+80     	; 0xb6 <__bad_interrupt>
  66:	00 00       	nop
  68:	26 c0       	rjmp	.+76     	; 0xb6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	24 c0       	rjmp	.+72     	; 0xb6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	22 c0       	rjmp	.+68     	; 0xb6 <__bad_interrupt>
  72:	00 00       	nop
  74:	20 c0       	rjmp	.+64     	; 0xb6 <__bad_interrupt>
  76:	00 00       	nop
  78:	1e c0       	rjmp	.+60     	; 0xb6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	1c c0       	rjmp	.+56     	; 0xb6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	1a c0       	rjmp	.+52     	; 0xb6 <__bad_interrupt>
  82:	00 00       	nop
  84:	18 c0       	rjmp	.+48     	; 0xb6 <__bad_interrupt>
  86:	00 00       	nop
  88:	16 c0       	rjmp	.+44     	; 0xb6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e4 e5       	ldi	r30, 0x54	; 84
  a0:	f8 e0       	ldi	r31, 0x08	; 8
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a4 30       	cpi	r26, 0x04	; 4
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>
  b2:	96 d0       	rcall	.+300    	; 0x1e0 <main>
  b4:	cd c3       	rjmp	.+1946   	; 0x850 <_exit>

000000b6 <__bad_interrupt>:
  b6:	a4 cf       	rjmp	.-184    	; 0x0 <__vectors>

000000b8 <lcd_strobe_lcd_e>:
	init_4bits_mode();
	lcd_clear();
}

void lcd_strobe_lcd_e(void) {
	PORTC |= (1<<LCD_E);
  b8:	85 b3       	in	r24, 0x15	; 21
  ba:	88 60       	ori	r24, 0x08	; 8
  bc:	85 bb       	out	0x15, r24	; 21
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  be:	8f ec       	ldi	r24, 0xCF	; 207
  c0:	97 e0       	ldi	r25, 0x07	; 7
  c2:	01 97       	sbiw	r24, 0x01	; 1
  c4:	f1 f7       	brne	.-4      	; 0xc2 <lcd_strobe_lcd_e+0xa>
  c6:	00 c0       	rjmp	.+0      	; 0xc8 <lcd_strobe_lcd_e+0x10>
  c8:	00 00       	nop
	_delay_ms(1);
	PORTC &= ~(1<<LCD_E);
  ca:	85 b3       	in	r24, 0x15	; 21
  cc:	87 7f       	andi	r24, 0xF7	; 247
  ce:	85 bb       	out	0x15, r24	; 21
  d0:	8f ec       	ldi	r24, 0xCF	; 207
  d2:	97 e0       	ldi	r25, 0x07	; 7
  d4:	01 97       	sbiw	r24, 0x01	; 1
  d6:	f1 f7       	brne	.-4      	; 0xd4 <lcd_strobe_lcd_e+0x1c>
  d8:	00 c0       	rjmp	.+0      	; 0xda <lcd_strobe_lcd_e+0x22>
  da:	00 00       	nop
  dc:	08 95       	ret

000000de <init_4bits_mode>:
	_delay_ms(1);
}

void init_4bits_mode(void) {
  de:	cf 93       	push	r28
	DDRC = 0xFF;
  e0:	8f ef       	ldi	r24, 0xFF	; 255
  e2:	84 bb       	out	0x14, r24	; 20
	PORTC = 0x00;
  e4:	15 ba       	out	0x15, r1	; 21

	PORTC = 0x20;
  e6:	c0 e2       	ldi	r28, 0x20	; 32
  e8:	c5 bb       	out	0x15, r28	; 21
	lcd_strobe_lcd_e();
  ea:	e6 df       	rcall	.-52     	; 0xb8 <lcd_strobe_lcd_e>

	PORTC = 0x20;
	lcd_strobe_lcd_e();
  ec:	c5 bb       	out	0x15, r28	; 21
  ee:	e4 df       	rcall	.-56     	; 0xb8 <lcd_strobe_lcd_e>
	PORTC = 0x80;
  f0:	80 e8       	ldi	r24, 0x80	; 128
	lcd_strobe_lcd_e();
  f2:	85 bb       	out	0x15, r24	; 21

	PORTC = 0x00;
  f4:	e1 df       	rcall	.-62     	; 0xb8 <lcd_strobe_lcd_e>
	lcd_strobe_lcd_e();
  f6:	15 ba       	out	0x15, r1	; 21
	PORTC = 0xF0;
  f8:	df df       	rcall	.-66     	; 0xb8 <lcd_strobe_lcd_e>
	lcd_strobe_lcd_e();
  fa:	80 ef       	ldi	r24, 0xF0	; 240

	PORTC = 0x00;
  fc:	85 bb       	out	0x15, r24	; 21
	lcd_strobe_lcd_e();
  fe:	dc df       	rcall	.-72     	; 0xb8 <lcd_strobe_lcd_e>
 100:	15 ba       	out	0x15, r1	; 21
	PORTC = 0x60;
 102:	da df       	rcall	.-76     	; 0xb8 <lcd_strobe_lcd_e>
 104:	80 e6       	ldi	r24, 0x60	; 96
	lcd_strobe_lcd_e();
 106:	85 bb       	out	0x15, r24	; 21
 108:	d7 df       	rcall	.-82     	; 0xb8 <lcd_strobe_lcd_e>
}
 10a:	cf 91       	pop	r28
 10c:	08 95       	ret

0000010e <display_text>:

void display_text(char *str) {
 10e:	0f 93       	push	r16
 110:	1f 93       	push	r17
 112:	cf 93       	push	r28
 114:	8c 01       	movw	r16, r24
	for (; *str; str++) {
 116:	0e c0       	rjmp	.+28     	; 0x134 <display_text+0x26>
		unsigned char byte = *str;
		// First nibble.
		PORTC = byte;
 118:	c5 bb       	out	0x15, r28	; 21
		PORTC |= (1<<LCD_RS);
 11a:	85 b3       	in	r24, 0x15	; 21
 11c:	84 60       	ori	r24, 0x04	; 4
 11e:	85 bb       	out	0x15, r24	; 21
		lcd_strobe_lcd_e();
 120:	cb df       	rcall	.-106    	; 0xb8 <lcd_strobe_lcd_e>

		// Second nibble
		PORTC = (byte<<4);
 122:	c2 95       	swap	r28
 124:	c0 7f       	andi	r28, 0xF0	; 240
 126:	c5 bb       	out	0x15, r28	; 21
		PORTC |= (1<<LCD_RS);
 128:	85 b3       	in	r24, 0x15	; 21
 12a:	84 60       	ori	r24, 0x04	; 4
		lcd_strobe_lcd_e();
 12c:	85 bb       	out	0x15, r24	; 21
 12e:	c4 df       	rcall	.-120    	; 0xb8 <lcd_strobe_lcd_e>
	PORTC = 0x60;
	lcd_strobe_lcd_e();
}

void display_text(char *str) {
	for (; *str; str++) {
 130:	0f 5f       	subi	r16, 0xFF	; 255
 132:	1f 4f       	sbci	r17, 0xFF	; 255
 134:	f8 01       	movw	r30, r16
 136:	c0 81       	ld	r28, Z
 138:	c1 11       	cpse	r28, r1
 13a:	ee cf       	rjmp	.-36     	; 0x118 <display_text+0xa>
		// Second nibble
		PORTC = (byte<<4);
		PORTC |= (1<<LCD_RS);
		lcd_strobe_lcd_e();
	}
}
 13c:	cf 91       	pop	r28
 13e:	1f 91       	pop	r17
 140:	0f 91       	pop	r16
 142:	08 95       	ret

00000144 <display_integer>:

void display_integer(int num) {
 144:	0f 93       	push	r16
 146:	1f 93       	push	r17
 148:	cf 93       	push	r28
 14a:	df 93       	push	r29
 14c:	cd b7       	in	r28, 0x3d	; 61
 14e:	de b7       	in	r29, 0x3e	; 62
 150:	60 97       	sbiw	r28, 0x10	; 16
 152:	0f b6       	in	r0, 0x3f	; 63
 154:	f8 94       	cli
 156:	de bf       	out	0x3e, r29	; 62
 158:	0f be       	out	0x3f, r0	; 63
 15a:	cd bf       	out	0x3d, r28	; 61
	char buffer[16]; // Buffer voor de omgezette tekenreeks
	sprintf(buffer, "%d", num); // Omzetten van integer naar tekenreeks
 15c:	9f 93       	push	r25
 15e:	8f 93       	push	r24
 160:	80 e0       	ldi	r24, 0x00	; 0
 162:	91 e0       	ldi	r25, 0x01	; 1
 164:	9f 93       	push	r25
 166:	8f 93       	push	r24
 168:	8e 01       	movw	r16, r28
 16a:	0f 5f       	subi	r16, 0xFF	; 255
 16c:	1f 4f       	sbci	r17, 0xFF	; 255
 16e:	1f 93       	push	r17
 170:	0f 93       	push	r16
 172:	93 d0       	rcall	.+294    	; 0x29a <sprintf>
	display_text(buffer); // Weergeven van de tekenreeks op het LCD-scherm
 174:	c8 01       	movw	r24, r16
 176:	cb df       	rcall	.-106    	; 0x10e <display_text>
}
 178:	0f 90       	pop	r0
 17a:	0f 90       	pop	r0
 17c:	0f 90       	pop	r0
 17e:	0f 90       	pop	r0
 180:	0f 90       	pop	r0
 182:	0f 90       	pop	r0
 184:	60 96       	adiw	r28, 0x10	; 16
 186:	0f b6       	in	r0, 0x3f	; 63
 188:	f8 94       	cli
 18a:	de bf       	out	0x3e, r29	; 62
 18c:	0f be       	out	0x3f, r0	; 63
 18e:	cd bf       	out	0x3d, r28	; 61
 190:	df 91       	pop	r29
 192:	cf 91       	pop	r28
 194:	1f 91       	pop	r17
 196:	0f 91       	pop	r16
 198:	08 95       	ret

0000019a <lcd_write_command>:

void lcd_write_command(unsigned char byte)

{
 19a:	cf 93       	push	r28
 19c:	c8 2f       	mov	r28, r24
	// First nibble.
	PORTC = byte;
 19e:	85 bb       	out	0x15, r24	; 21
	PORTC &= ~(1<<LCD_RS);
 1a0:	85 b3       	in	r24, 0x15	; 21
 1a2:	8b 7f       	andi	r24, 0xFB	; 251
 1a4:	85 bb       	out	0x15, r24	; 21
	lcd_strobe_lcd_e();
 1a6:	88 df       	rcall	.-240    	; 0xb8 <lcd_strobe_lcd_e>

	// Second nibble
	PORTC = (byte<<4);
 1a8:	c2 95       	swap	r28
 1aa:	c0 7f       	andi	r28, 0xF0	; 240
 1ac:	c5 bb       	out	0x15, r28	; 21
	PORTC &= ~(1<<LCD_RS);
 1ae:	85 b3       	in	r24, 0x15	; 21
 1b0:	8b 7f       	andi	r24, 0xFB	; 251
	lcd_strobe_lcd_e();
 1b2:	85 bb       	out	0x15, r24	; 21
 1b4:	81 df       	rcall	.-254    	; 0xb8 <lcd_strobe_lcd_e>
}
 1b6:	cf 91       	pop	r28
 1b8:	08 95       	ret

000001ba <lcd_clear>:

void lcd_clear(void) {
	lcd_write_command(0x01);
 1ba:	81 e0       	ldi	r24, 0x01	; 1
 1bc:	ee df       	rcall	.-36     	; 0x19a <lcd_write_command>
 1be:	8f e9       	ldi	r24, 0x9F	; 159
 1c0:	9f e0       	ldi	r25, 0x0F	; 15
 1c2:	01 97       	sbiw	r24, 0x01	; 1
 1c4:	f1 f7       	brne	.-4      	; 0x1c2 <lcd_clear+0x8>
 1c6:	00 c0       	rjmp	.+0      	; 0x1c8 <lcd_clear+0xe>
 1c8:	00 00       	nop
 1ca:	08 95       	ret

000001cc <init>:
void lcd_write_data(unsigned char byte);
void lcd_write_command(unsigned char byte);
void lcd_clear(void);

void init() {
	DDRC = 0xFF;
 1cc:	8f ef       	ldi	r24, 0xFF	; 255
 1ce:	84 bb       	out	0x14, r24	; 20
	DDRD = 0xFF;
 1d0:	81 bb       	out	0x11, r24	; 17
	init_4bits_mode();
 1d2:	85 df       	rcall	.-246    	; 0xde <init_4bits_mode>
	init_4bits_mode();
 1d4:	84 df       	rcall	.-248    	; 0xde <init_4bits_mode>
	lcd_clear();
 1d6:	f1 cf       	rjmp	.-30     	; 0x1ba <lcd_clear>
 1d8:	08 95       	ret

000001da <set_cursor>:
 1da:	80 68       	ori	r24, 0x80	; 128
	lcd_write_command(0x01);
	_delay_ms(2);
}

void set_cursor(int position) {
	lcd_write_command(0x80 | (position & 0x7F));
 1dc:	de cf       	rjmp	.-68     	; 0x19a <lcd_write_command>
 1de:	08 95       	ret

000001e0 <main>:
#include <util/delay.h>
#include "LCD.h"

int main (void){
	
	DDRD = 0b11111111;
 1e0:	8f ef       	ldi	r24, 0xFF	; 255
 1e2:	81 bb       	out	0x11, r24	; 17
	PORTE = 0x01;
 1e4:	81 e0       	ldi	r24, 0x01	; 1
 1e6:	83 b9       	out	0x03, r24	; 3
	PORTG = 0x01;
 1e8:	80 93 65 00 	sts	0x0065, r24	; 0x800065 <__TEXT_REGION_LENGTH__+0x7e0065>
	
	init(); //initialiseer lcd
 1ec:	ef df       	rcall	.-34     	; 0x1cc <init>
	set_cursor(5);
 1ee:	85 e0       	ldi	r24, 0x05	; 5
 1f0:	90 e0       	ldi	r25, 0x00	; 0
 1f2:	f3 df       	rcall	.-26     	; 0x1da <set_cursor>
	
	int i = 0;
	display_integer(i); //zet alvast de 0 op het LCD scherm
 1f4:	80 e0       	ldi	r24, 0x00	; 0
 1f6:	90 e0       	ldi	r25, 0x00	; 0
 1f8:	a5 df       	rcall	.-182    	; 0x144 <display_integer>
	PORTG = 0x01;
	
	init(); //initialiseer lcd
	set_cursor(5);
	
	int i = 0;
 1fa:	c0 e0       	ldi	r28, 0x00	; 0
 1fc:	d0 e0       	ldi	r29, 0x00	; 0
 1fe:	2f ef       	ldi	r18, 0xFF	; 255
 200:	80 e7       	ldi	r24, 0x70	; 112
 202:	92 e0       	ldi	r25, 0x02	; 2
 204:	21 50       	subi	r18, 0x01	; 1
 206:	80 40       	sbci	r24, 0x00	; 0
 208:	90 40       	sbci	r25, 0x00	; 0
 20a:	e1 f7       	brne	.-8      	; 0x204 <main+0x24>
 20c:	00 c0       	rjmp	.+0      	; 0x20e <main+0x2e>
 20e:	00 00       	nop
	display_integer(i); //zet alvast de 0 op het LCD scherm
	
	while (1) {
		_delay_ms(100);
		if(PINE == 1 && PING == 1){
 210:	81 b1       	in	r24, 0x01	; 1
 212:	81 30       	cpi	r24, 0x01	; 1
 214:	c9 f4       	brne	.+50     	; 0x248 <main+0x68>
 216:	80 91 63 00 	lds	r24, 0x0063	; 0x800063 <__TEXT_REGION_LENGTH__+0x7e0063>
 21a:	81 30       	cpi	r24, 0x01	; 1
 21c:	a9 f4       	brne	.+42     	; 0x248 <main+0x68>
 21e:	06 c0       	rjmp	.+12     	; 0x22c <main+0x4c>
 220:	8f e1       	ldi	r24, 0x1F	; 31
 222:	9e e4       	ldi	r25, 0x4E	; 78
 224:	01 97       	sbiw	r24, 0x01	; 1
 226:	f1 f7       	brne	.-4      	; 0x224 <main+0x44>
 228:	00 c0       	rjmp	.+0      	; 0x22a <main+0x4a>
 22a:	00 00       	nop
			while(PINE == 1 && PING == 1){ //wacht totdat te knoppen los worden gelaten
 22c:	81 b1       	in	r24, 0x01	; 1
 22e:	81 30       	cpi	r24, 0x01	; 1
 230:	21 f4       	brne	.+8      	; 0x23a <main+0x5a>
 232:	80 91 63 00 	lds	r24, 0x0063	; 0x800063 <__TEXT_REGION_LENGTH__+0x7e0063>
 236:	81 30       	cpi	r24, 0x01	; 1
				_delay_ms(10);
			}
			i = 0;
			init(); //reset lcd
 238:	99 f3       	breq	.-26     	; 0x220 <main+0x40>
			display_integer(i); //display i
 23a:	c8 df       	rcall	.-112    	; 0x1cc <init>
 23c:	80 e0       	ldi	r24, 0x00	; 0
 23e:	90 e0       	ldi	r25, 0x00	; 0
 240:	81 df       	rcall	.-254    	; 0x144 <display_integer>
		_delay_ms(100);
		if(PINE == 1 && PING == 1){
			while(PINE == 1 && PING == 1){ //wacht totdat te knoppen los worden gelaten
				_delay_ms(10);
			}
			i = 0;
 242:	c0 e0       	ldi	r28, 0x00	; 0
 244:	d0 e0       	ldi	r29, 0x00	; 0
			init(); //reset lcd
			display_integer(i); //display i
 246:	db cf       	rjmp	.-74     	; 0x1fe <main+0x1e>
		}else if(PINE == 1){ 
 248:	81 b1       	in	r24, 0x01	; 1
 24a:	81 30       	cpi	r24, 0x01	; 1
 24c:	79 f4       	brne	.+30     	; 0x26c <main+0x8c>
 24e:	06 c0       	rjmp	.+12     	; 0x25c <main+0x7c>
 250:	8f e1       	ldi	r24, 0x1F	; 31
 252:	9e e4       	ldi	r25, 0x4E	; 78
 254:	01 97       	sbiw	r24, 0x01	; 1
 256:	f1 f7       	brne	.-4      	; 0x254 <main+0x74>
 258:	00 c0       	rjmp	.+0      	; 0x25a <main+0x7a>
			while(PINE == 1){ //wacht totdat de knop wordt losgelaten
 25a:	00 00       	nop
 25c:	81 b1       	in	r24, 0x01	; 1
				_delay_ms(10);
			}
			i++;
 25e:	81 30       	cpi	r24, 0x01	; 1
			init(); //reset lcd
 260:	b9 f3       	breq	.-18     	; 0x250 <main+0x70>
 262:	21 96       	adiw	r28, 0x01	; 1
			display_integer(i); //display i
 264:	b3 df       	rcall	.-154    	; 0x1cc <init>
 266:	ce 01       	movw	r24, r28
 268:	6d df       	rcall	.-294    	; 0x144 <display_integer>
 26a:	c9 cf       	rjmp	.-110    	; 0x1fe <main+0x1e>
	}else if(PING == 1 && i > 0){ //zorg ervoor dat de i niet in de min kan
 26c:	80 91 63 00 	lds	r24, 0x0063	; 0x800063 <__TEXT_REGION_LENGTH__+0x7e0063>
 270:	81 30       	cpi	r24, 0x01	; 1
 272:	29 f6       	brne	.-118    	; 0x1fe <main+0x1e>
 274:	1c 16       	cp	r1, r28
 276:	1d 06       	cpc	r1, r29
 278:	3c f0       	brlt	.+14     	; 0x288 <main+0xa8>
 27a:	c1 cf       	rjmp	.-126    	; 0x1fe <main+0x1e>
 27c:	8f e1       	ldi	r24, 0x1F	; 31
 27e:	9e e4       	ldi	r25, 0x4E	; 78
 280:	01 97       	sbiw	r24, 0x01	; 1
 282:	f1 f7       	brne	.-4      	; 0x280 <main+0xa0>
 284:	00 c0       	rjmp	.+0      	; 0x286 <main+0xa6>
		while(PING == 1){ //wacht totdat de knop wordt losgelaten
 286:	00 00       	nop
 288:	80 91 63 00 	lds	r24, 0x0063	; 0x800063 <__TEXT_REGION_LENGTH__+0x7e0063>
			_delay_ms(10);
		}
		i--;
 28c:	81 30       	cpi	r24, 0x01	; 1
		init(); //reset lcd
 28e:	b1 f3       	breq	.-20     	; 0x27c <main+0x9c>
 290:	21 97       	sbiw	r28, 0x01	; 1
		display_integer(i); //display i
 292:	9c df       	rcall	.-200    	; 0x1cc <init>
 294:	ce 01       	movw	r24, r28
 296:	56 df       	rcall	.-340    	; 0x144 <display_integer>
 298:	b2 cf       	rjmp	.-156    	; 0x1fe <main+0x1e>

0000029a <sprintf>:
 29a:	0f 93       	push	r16
 29c:	1f 93       	push	r17
 29e:	cf 93       	push	r28
 2a0:	df 93       	push	r29
 2a2:	cd b7       	in	r28, 0x3d	; 61
 2a4:	de b7       	in	r29, 0x3e	; 62
 2a6:	2e 97       	sbiw	r28, 0x0e	; 14
 2a8:	0f b6       	in	r0, 0x3f	; 63
 2aa:	f8 94       	cli
 2ac:	de bf       	out	0x3e, r29	; 62
 2ae:	0f be       	out	0x3f, r0	; 63
 2b0:	cd bf       	out	0x3d, r28	; 61
 2b2:	0d 89       	ldd	r16, Y+21	; 0x15
 2b4:	1e 89       	ldd	r17, Y+22	; 0x16
 2b6:	86 e0       	ldi	r24, 0x06	; 6
 2b8:	8c 83       	std	Y+4, r24	; 0x04
 2ba:	1a 83       	std	Y+2, r17	; 0x02
 2bc:	09 83       	std	Y+1, r16	; 0x01
 2be:	8f ef       	ldi	r24, 0xFF	; 255
 2c0:	9f e7       	ldi	r25, 0x7F	; 127
 2c2:	9e 83       	std	Y+6, r25	; 0x06
 2c4:	8d 83       	std	Y+5, r24	; 0x05
 2c6:	ae 01       	movw	r20, r28
 2c8:	47 5e       	subi	r20, 0xE7	; 231
 2ca:	5f 4f       	sbci	r21, 0xFF	; 255
 2cc:	6f 89       	ldd	r22, Y+23	; 0x17
 2ce:	78 8d       	ldd	r23, Y+24	; 0x18
 2d0:	ce 01       	movw	r24, r28
 2d2:	01 96       	adiw	r24, 0x01	; 1
 2d4:	10 d0       	rcall	.+32     	; 0x2f6 <vfprintf>
 2d6:	ef 81       	ldd	r30, Y+7	; 0x07
 2d8:	f8 85       	ldd	r31, Y+8	; 0x08
 2da:	e0 0f       	add	r30, r16
 2dc:	f1 1f       	adc	r31, r17
 2de:	10 82       	st	Z, r1
 2e0:	2e 96       	adiw	r28, 0x0e	; 14
 2e2:	0f b6       	in	r0, 0x3f	; 63
 2e4:	f8 94       	cli
 2e6:	de bf       	out	0x3e, r29	; 62
 2e8:	0f be       	out	0x3f, r0	; 63
 2ea:	cd bf       	out	0x3d, r28	; 61
 2ec:	df 91       	pop	r29
 2ee:	cf 91       	pop	r28
 2f0:	1f 91       	pop	r17
 2f2:	0f 91       	pop	r16
 2f4:	08 95       	ret

000002f6 <vfprintf>:
 2f6:	2f 92       	push	r2
 2f8:	3f 92       	push	r3
 2fa:	4f 92       	push	r4
 2fc:	5f 92       	push	r5
 2fe:	6f 92       	push	r6
 300:	7f 92       	push	r7
 302:	8f 92       	push	r8
 304:	9f 92       	push	r9
 306:	af 92       	push	r10
 308:	bf 92       	push	r11
 30a:	cf 92       	push	r12
 30c:	df 92       	push	r13
 30e:	ef 92       	push	r14
 310:	ff 92       	push	r15
 312:	0f 93       	push	r16
 314:	1f 93       	push	r17
 316:	cf 93       	push	r28
 318:	df 93       	push	r29
 31a:	cd b7       	in	r28, 0x3d	; 61
 31c:	de b7       	in	r29, 0x3e	; 62
 31e:	2b 97       	sbiw	r28, 0x0b	; 11
 320:	0f b6       	in	r0, 0x3f	; 63
 322:	f8 94       	cli
 324:	de bf       	out	0x3e, r29	; 62
 326:	0f be       	out	0x3f, r0	; 63
 328:	cd bf       	out	0x3d, r28	; 61
 32a:	6c 01       	movw	r12, r24
 32c:	7b 01       	movw	r14, r22
 32e:	8a 01       	movw	r16, r20
 330:	fc 01       	movw	r30, r24
 332:	17 82       	std	Z+7, r1	; 0x07
 334:	16 82       	std	Z+6, r1	; 0x06
 336:	83 81       	ldd	r24, Z+3	; 0x03
 338:	81 ff       	sbrs	r24, 1
 33a:	bf c1       	rjmp	.+894    	; 0x6ba <__LOCK_REGION_LENGTH__+0x2ba>
 33c:	ce 01       	movw	r24, r28
 33e:	01 96       	adiw	r24, 0x01	; 1
 340:	3c 01       	movw	r6, r24
 342:	f6 01       	movw	r30, r12
 344:	93 81       	ldd	r25, Z+3	; 0x03
 346:	f7 01       	movw	r30, r14
 348:	93 fd       	sbrc	r25, 3
 34a:	85 91       	lpm	r24, Z+
 34c:	93 ff       	sbrs	r25, 3
 34e:	81 91       	ld	r24, Z+
 350:	7f 01       	movw	r14, r30
 352:	88 23       	and	r24, r24
 354:	09 f4       	brne	.+2      	; 0x358 <vfprintf+0x62>
 356:	ad c1       	rjmp	.+858    	; 0x6b2 <__LOCK_REGION_LENGTH__+0x2b2>
 358:	85 32       	cpi	r24, 0x25	; 37
 35a:	39 f4       	brne	.+14     	; 0x36a <vfprintf+0x74>
 35c:	93 fd       	sbrc	r25, 3
 35e:	85 91       	lpm	r24, Z+
 360:	93 ff       	sbrs	r25, 3
 362:	81 91       	ld	r24, Z+
 364:	7f 01       	movw	r14, r30
 366:	85 32       	cpi	r24, 0x25	; 37
 368:	21 f4       	brne	.+8      	; 0x372 <vfprintf+0x7c>
 36a:	b6 01       	movw	r22, r12
 36c:	90 e0       	ldi	r25, 0x00	; 0
 36e:	d6 d1       	rcall	.+940    	; 0x71c <fputc>
 370:	e8 cf       	rjmp	.-48     	; 0x342 <vfprintf+0x4c>
 372:	91 2c       	mov	r9, r1
 374:	21 2c       	mov	r2, r1
 376:	31 2c       	mov	r3, r1
 378:	ff e1       	ldi	r31, 0x1F	; 31
 37a:	f3 15       	cp	r31, r3
 37c:	d8 f0       	brcs	.+54     	; 0x3b4 <vfprintf+0xbe>
 37e:	8b 32       	cpi	r24, 0x2B	; 43
 380:	79 f0       	breq	.+30     	; 0x3a0 <vfprintf+0xaa>
 382:	38 f4       	brcc	.+14     	; 0x392 <vfprintf+0x9c>
 384:	80 32       	cpi	r24, 0x20	; 32
 386:	79 f0       	breq	.+30     	; 0x3a6 <vfprintf+0xb0>
 388:	83 32       	cpi	r24, 0x23	; 35
 38a:	a1 f4       	brne	.+40     	; 0x3b4 <vfprintf+0xbe>
 38c:	23 2d       	mov	r18, r3
 38e:	20 61       	ori	r18, 0x10	; 16
 390:	1d c0       	rjmp	.+58     	; 0x3cc <vfprintf+0xd6>
 392:	8d 32       	cpi	r24, 0x2D	; 45
 394:	61 f0       	breq	.+24     	; 0x3ae <vfprintf+0xb8>
 396:	80 33       	cpi	r24, 0x30	; 48
 398:	69 f4       	brne	.+26     	; 0x3b4 <vfprintf+0xbe>
 39a:	23 2d       	mov	r18, r3
 39c:	21 60       	ori	r18, 0x01	; 1
 39e:	16 c0       	rjmp	.+44     	; 0x3cc <vfprintf+0xd6>
 3a0:	83 2d       	mov	r24, r3
 3a2:	82 60       	ori	r24, 0x02	; 2
 3a4:	38 2e       	mov	r3, r24
 3a6:	e3 2d       	mov	r30, r3
 3a8:	e4 60       	ori	r30, 0x04	; 4
 3aa:	3e 2e       	mov	r3, r30
 3ac:	2a c0       	rjmp	.+84     	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
 3ae:	f3 2d       	mov	r31, r3
 3b0:	f8 60       	ori	r31, 0x08	; 8
 3b2:	1d c0       	rjmp	.+58     	; 0x3ee <vfprintf+0xf8>
 3b4:	37 fc       	sbrc	r3, 7
 3b6:	2d c0       	rjmp	.+90     	; 0x412 <__LOCK_REGION_LENGTH__+0x12>
 3b8:	20 ed       	ldi	r18, 0xD0	; 208
 3ba:	28 0f       	add	r18, r24
 3bc:	2a 30       	cpi	r18, 0x0A	; 10
 3be:	40 f0       	brcs	.+16     	; 0x3d0 <vfprintf+0xda>
 3c0:	8e 32       	cpi	r24, 0x2E	; 46
 3c2:	b9 f4       	brne	.+46     	; 0x3f2 <vfprintf+0xfc>
 3c4:	36 fc       	sbrc	r3, 6
 3c6:	75 c1       	rjmp	.+746    	; 0x6b2 <__LOCK_REGION_LENGTH__+0x2b2>
 3c8:	23 2d       	mov	r18, r3
 3ca:	20 64       	ori	r18, 0x40	; 64
 3cc:	32 2e       	mov	r3, r18
 3ce:	19 c0       	rjmp	.+50     	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
 3d0:	36 fe       	sbrs	r3, 6
 3d2:	06 c0       	rjmp	.+12     	; 0x3e0 <vfprintf+0xea>
 3d4:	8a e0       	ldi	r24, 0x0A	; 10
 3d6:	98 9e       	mul	r9, r24
 3d8:	20 0d       	add	r18, r0
 3da:	11 24       	eor	r1, r1
 3dc:	92 2e       	mov	r9, r18
 3de:	11 c0       	rjmp	.+34     	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
 3e0:	ea e0       	ldi	r30, 0x0A	; 10
 3e2:	2e 9e       	mul	r2, r30
 3e4:	20 0d       	add	r18, r0
 3e6:	11 24       	eor	r1, r1
 3e8:	22 2e       	mov	r2, r18
 3ea:	f3 2d       	mov	r31, r3
 3ec:	f0 62       	ori	r31, 0x20	; 32
 3ee:	3f 2e       	mov	r3, r31
 3f0:	08 c0       	rjmp	.+16     	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
 3f2:	8c 36       	cpi	r24, 0x6C	; 108
 3f4:	21 f4       	brne	.+8      	; 0x3fe <vfprintf+0x108>
 3f6:	83 2d       	mov	r24, r3
 3f8:	80 68       	ori	r24, 0x80	; 128
 3fa:	38 2e       	mov	r3, r24
 3fc:	02 c0       	rjmp	.+4      	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
 3fe:	88 36       	cpi	r24, 0x68	; 104
 400:	41 f4       	brne	.+16     	; 0x412 <__LOCK_REGION_LENGTH__+0x12>
 402:	f7 01       	movw	r30, r14
 404:	93 fd       	sbrc	r25, 3
 406:	85 91       	lpm	r24, Z+
 408:	93 ff       	sbrs	r25, 3
 40a:	81 91       	ld	r24, Z+
 40c:	7f 01       	movw	r14, r30
 40e:	81 11       	cpse	r24, r1
 410:	b3 cf       	rjmp	.-154    	; 0x378 <vfprintf+0x82>
 412:	98 2f       	mov	r25, r24
 414:	9f 7d       	andi	r25, 0xDF	; 223
 416:	95 54       	subi	r25, 0x45	; 69
 418:	93 30       	cpi	r25, 0x03	; 3
 41a:	28 f4       	brcc	.+10     	; 0x426 <__LOCK_REGION_LENGTH__+0x26>
 41c:	0c 5f       	subi	r16, 0xFC	; 252
 41e:	1f 4f       	sbci	r17, 0xFF	; 255
 420:	9f e3       	ldi	r25, 0x3F	; 63
 422:	99 83       	std	Y+1, r25	; 0x01
 424:	0d c0       	rjmp	.+26     	; 0x440 <__LOCK_REGION_LENGTH__+0x40>
 426:	83 36       	cpi	r24, 0x63	; 99
 428:	31 f0       	breq	.+12     	; 0x436 <__LOCK_REGION_LENGTH__+0x36>
 42a:	83 37       	cpi	r24, 0x73	; 115
 42c:	71 f0       	breq	.+28     	; 0x44a <__LOCK_REGION_LENGTH__+0x4a>
 42e:	83 35       	cpi	r24, 0x53	; 83
 430:	09 f0       	breq	.+2      	; 0x434 <__LOCK_REGION_LENGTH__+0x34>
 432:	55 c0       	rjmp	.+170    	; 0x4de <__LOCK_REGION_LENGTH__+0xde>
 434:	20 c0       	rjmp	.+64     	; 0x476 <__LOCK_REGION_LENGTH__+0x76>
 436:	f8 01       	movw	r30, r16
 438:	80 81       	ld	r24, Z
 43a:	89 83       	std	Y+1, r24	; 0x01
 43c:	0e 5f       	subi	r16, 0xFE	; 254
 43e:	1f 4f       	sbci	r17, 0xFF	; 255
 440:	88 24       	eor	r8, r8
 442:	83 94       	inc	r8
 444:	91 2c       	mov	r9, r1
 446:	53 01       	movw	r10, r6
 448:	12 c0       	rjmp	.+36     	; 0x46e <__LOCK_REGION_LENGTH__+0x6e>
 44a:	28 01       	movw	r4, r16
 44c:	f2 e0       	ldi	r31, 0x02	; 2
 44e:	4f 0e       	add	r4, r31
 450:	51 1c       	adc	r5, r1
 452:	f8 01       	movw	r30, r16
 454:	a0 80       	ld	r10, Z
 456:	b1 80       	ldd	r11, Z+1	; 0x01
 458:	36 fe       	sbrs	r3, 6
 45a:	03 c0       	rjmp	.+6      	; 0x462 <__LOCK_REGION_LENGTH__+0x62>
 45c:	69 2d       	mov	r22, r9
 45e:	70 e0       	ldi	r23, 0x00	; 0
 460:	02 c0       	rjmp	.+4      	; 0x466 <__LOCK_REGION_LENGTH__+0x66>
 462:	6f ef       	ldi	r22, 0xFF	; 255
 464:	7f ef       	ldi	r23, 0xFF	; 255
 466:	c5 01       	movw	r24, r10
 468:	4e d1       	rcall	.+668    	; 0x706 <strnlen>
 46a:	4c 01       	movw	r8, r24
 46c:	82 01       	movw	r16, r4
 46e:	f3 2d       	mov	r31, r3
 470:	ff 77       	andi	r31, 0x7F	; 127
 472:	3f 2e       	mov	r3, r31
 474:	15 c0       	rjmp	.+42     	; 0x4a0 <__LOCK_REGION_LENGTH__+0xa0>
 476:	28 01       	movw	r4, r16
 478:	22 e0       	ldi	r18, 0x02	; 2
 47a:	42 0e       	add	r4, r18
 47c:	51 1c       	adc	r5, r1
 47e:	f8 01       	movw	r30, r16
 480:	a0 80       	ld	r10, Z
 482:	b1 80       	ldd	r11, Z+1	; 0x01
 484:	36 fe       	sbrs	r3, 6
 486:	03 c0       	rjmp	.+6      	; 0x48e <__LOCK_REGION_LENGTH__+0x8e>
 488:	69 2d       	mov	r22, r9
 48a:	70 e0       	ldi	r23, 0x00	; 0
 48c:	02 c0       	rjmp	.+4      	; 0x492 <__LOCK_REGION_LENGTH__+0x92>
 48e:	6f ef       	ldi	r22, 0xFF	; 255
 490:	7f ef       	ldi	r23, 0xFF	; 255
 492:	c5 01       	movw	r24, r10
 494:	2d d1       	rcall	.+602    	; 0x6f0 <strnlen_P>
 496:	4c 01       	movw	r8, r24
 498:	f3 2d       	mov	r31, r3
 49a:	f0 68       	ori	r31, 0x80	; 128
 49c:	3f 2e       	mov	r3, r31
 49e:	82 01       	movw	r16, r4
 4a0:	33 fc       	sbrc	r3, 3
 4a2:	19 c0       	rjmp	.+50     	; 0x4d6 <__LOCK_REGION_LENGTH__+0xd6>
 4a4:	82 2d       	mov	r24, r2
 4a6:	90 e0       	ldi	r25, 0x00	; 0
 4a8:	88 16       	cp	r8, r24
 4aa:	99 06       	cpc	r9, r25
 4ac:	a0 f4       	brcc	.+40     	; 0x4d6 <__LOCK_REGION_LENGTH__+0xd6>
 4ae:	b6 01       	movw	r22, r12
 4b0:	80 e2       	ldi	r24, 0x20	; 32
 4b2:	90 e0       	ldi	r25, 0x00	; 0
 4b4:	33 d1       	rcall	.+614    	; 0x71c <fputc>
 4b6:	2a 94       	dec	r2
 4b8:	f5 cf       	rjmp	.-22     	; 0x4a4 <__LOCK_REGION_LENGTH__+0xa4>
 4ba:	f5 01       	movw	r30, r10
 4bc:	37 fc       	sbrc	r3, 7
 4be:	85 91       	lpm	r24, Z+
 4c0:	37 fe       	sbrs	r3, 7
 4c2:	81 91       	ld	r24, Z+
 4c4:	5f 01       	movw	r10, r30
 4c6:	b6 01       	movw	r22, r12
 4c8:	90 e0       	ldi	r25, 0x00	; 0
 4ca:	28 d1       	rcall	.+592    	; 0x71c <fputc>
 4cc:	21 10       	cpse	r2, r1
 4ce:	2a 94       	dec	r2
 4d0:	21 e0       	ldi	r18, 0x01	; 1
 4d2:	82 1a       	sub	r8, r18
 4d4:	91 08       	sbc	r9, r1
 4d6:	81 14       	cp	r8, r1
 4d8:	91 04       	cpc	r9, r1
 4da:	79 f7       	brne	.-34     	; 0x4ba <__LOCK_REGION_LENGTH__+0xba>
 4dc:	e1 c0       	rjmp	.+450    	; 0x6a0 <__LOCK_REGION_LENGTH__+0x2a0>
 4de:	84 36       	cpi	r24, 0x64	; 100
 4e0:	11 f0       	breq	.+4      	; 0x4e6 <__LOCK_REGION_LENGTH__+0xe6>
 4e2:	89 36       	cpi	r24, 0x69	; 105
 4e4:	39 f5       	brne	.+78     	; 0x534 <__LOCK_REGION_LENGTH__+0x134>
 4e6:	f8 01       	movw	r30, r16
 4e8:	37 fe       	sbrs	r3, 7
 4ea:	07 c0       	rjmp	.+14     	; 0x4fa <__LOCK_REGION_LENGTH__+0xfa>
 4ec:	60 81       	ld	r22, Z
 4ee:	71 81       	ldd	r23, Z+1	; 0x01
 4f0:	82 81       	ldd	r24, Z+2	; 0x02
 4f2:	93 81       	ldd	r25, Z+3	; 0x03
 4f4:	0c 5f       	subi	r16, 0xFC	; 252
 4f6:	1f 4f       	sbci	r17, 0xFF	; 255
 4f8:	08 c0       	rjmp	.+16     	; 0x50a <__LOCK_REGION_LENGTH__+0x10a>
 4fa:	60 81       	ld	r22, Z
 4fc:	71 81       	ldd	r23, Z+1	; 0x01
 4fe:	07 2e       	mov	r0, r23
 500:	00 0c       	add	r0, r0
 502:	88 0b       	sbc	r24, r24
 504:	99 0b       	sbc	r25, r25
 506:	0e 5f       	subi	r16, 0xFE	; 254
 508:	1f 4f       	sbci	r17, 0xFF	; 255
 50a:	f3 2d       	mov	r31, r3
 50c:	ff 76       	andi	r31, 0x6F	; 111
 50e:	3f 2e       	mov	r3, r31
 510:	97 ff       	sbrs	r25, 7
 512:	09 c0       	rjmp	.+18     	; 0x526 <__LOCK_REGION_LENGTH__+0x126>
 514:	90 95       	com	r25
 516:	80 95       	com	r24
 518:	70 95       	com	r23
 51a:	61 95       	neg	r22
 51c:	7f 4f       	sbci	r23, 0xFF	; 255
 51e:	8f 4f       	sbci	r24, 0xFF	; 255
 520:	9f 4f       	sbci	r25, 0xFF	; 255
 522:	f0 68       	ori	r31, 0x80	; 128
 524:	3f 2e       	mov	r3, r31
 526:	2a e0       	ldi	r18, 0x0A	; 10
 528:	30 e0       	ldi	r19, 0x00	; 0
 52a:	a3 01       	movw	r20, r6
 52c:	33 d1       	rcall	.+614    	; 0x794 <__ultoa_invert>
 52e:	88 2e       	mov	r8, r24
 530:	86 18       	sub	r8, r6
 532:	44 c0       	rjmp	.+136    	; 0x5bc <__LOCK_REGION_LENGTH__+0x1bc>
 534:	85 37       	cpi	r24, 0x75	; 117
 536:	31 f4       	brne	.+12     	; 0x544 <__LOCK_REGION_LENGTH__+0x144>
 538:	23 2d       	mov	r18, r3
 53a:	2f 7e       	andi	r18, 0xEF	; 239
 53c:	b2 2e       	mov	r11, r18
 53e:	2a e0       	ldi	r18, 0x0A	; 10
 540:	30 e0       	ldi	r19, 0x00	; 0
 542:	25 c0       	rjmp	.+74     	; 0x58e <__LOCK_REGION_LENGTH__+0x18e>
 544:	93 2d       	mov	r25, r3
 546:	99 7f       	andi	r25, 0xF9	; 249
 548:	b9 2e       	mov	r11, r25
 54a:	8f 36       	cpi	r24, 0x6F	; 111
 54c:	c1 f0       	breq	.+48     	; 0x57e <__LOCK_REGION_LENGTH__+0x17e>
 54e:	18 f4       	brcc	.+6      	; 0x556 <__LOCK_REGION_LENGTH__+0x156>
 550:	88 35       	cpi	r24, 0x58	; 88
 552:	79 f0       	breq	.+30     	; 0x572 <__LOCK_REGION_LENGTH__+0x172>
 554:	ae c0       	rjmp	.+348    	; 0x6b2 <__LOCK_REGION_LENGTH__+0x2b2>
 556:	80 37       	cpi	r24, 0x70	; 112
 558:	19 f0       	breq	.+6      	; 0x560 <__LOCK_REGION_LENGTH__+0x160>
 55a:	88 37       	cpi	r24, 0x78	; 120
 55c:	21 f0       	breq	.+8      	; 0x566 <__LOCK_REGION_LENGTH__+0x166>
 55e:	a9 c0       	rjmp	.+338    	; 0x6b2 <__LOCK_REGION_LENGTH__+0x2b2>
 560:	e9 2f       	mov	r30, r25
 562:	e0 61       	ori	r30, 0x10	; 16
 564:	be 2e       	mov	r11, r30
 566:	b4 fe       	sbrs	r11, 4
 568:	0d c0       	rjmp	.+26     	; 0x584 <__LOCK_REGION_LENGTH__+0x184>
 56a:	fb 2d       	mov	r31, r11
 56c:	f4 60       	ori	r31, 0x04	; 4
 56e:	bf 2e       	mov	r11, r31
 570:	09 c0       	rjmp	.+18     	; 0x584 <__LOCK_REGION_LENGTH__+0x184>
 572:	34 fe       	sbrs	r3, 4
 574:	0a c0       	rjmp	.+20     	; 0x58a <__LOCK_REGION_LENGTH__+0x18a>
 576:	29 2f       	mov	r18, r25
 578:	26 60       	ori	r18, 0x06	; 6
 57a:	b2 2e       	mov	r11, r18
 57c:	06 c0       	rjmp	.+12     	; 0x58a <__LOCK_REGION_LENGTH__+0x18a>
 57e:	28 e0       	ldi	r18, 0x08	; 8
 580:	30 e0       	ldi	r19, 0x00	; 0
 582:	05 c0       	rjmp	.+10     	; 0x58e <__LOCK_REGION_LENGTH__+0x18e>
 584:	20 e1       	ldi	r18, 0x10	; 16
 586:	30 e0       	ldi	r19, 0x00	; 0
 588:	02 c0       	rjmp	.+4      	; 0x58e <__LOCK_REGION_LENGTH__+0x18e>
 58a:	20 e1       	ldi	r18, 0x10	; 16
 58c:	32 e0       	ldi	r19, 0x02	; 2
 58e:	f8 01       	movw	r30, r16
 590:	b7 fe       	sbrs	r11, 7
 592:	07 c0       	rjmp	.+14     	; 0x5a2 <__LOCK_REGION_LENGTH__+0x1a2>
 594:	60 81       	ld	r22, Z
 596:	71 81       	ldd	r23, Z+1	; 0x01
 598:	82 81       	ldd	r24, Z+2	; 0x02
 59a:	93 81       	ldd	r25, Z+3	; 0x03
 59c:	0c 5f       	subi	r16, 0xFC	; 252
 59e:	1f 4f       	sbci	r17, 0xFF	; 255
 5a0:	06 c0       	rjmp	.+12     	; 0x5ae <__LOCK_REGION_LENGTH__+0x1ae>
 5a2:	60 81       	ld	r22, Z
 5a4:	71 81       	ldd	r23, Z+1	; 0x01
 5a6:	80 e0       	ldi	r24, 0x00	; 0
 5a8:	90 e0       	ldi	r25, 0x00	; 0
 5aa:	0e 5f       	subi	r16, 0xFE	; 254
 5ac:	1f 4f       	sbci	r17, 0xFF	; 255
 5ae:	a3 01       	movw	r20, r6
 5b0:	f1 d0       	rcall	.+482    	; 0x794 <__ultoa_invert>
 5b2:	88 2e       	mov	r8, r24
 5b4:	86 18       	sub	r8, r6
 5b6:	fb 2d       	mov	r31, r11
 5b8:	ff 77       	andi	r31, 0x7F	; 127
 5ba:	3f 2e       	mov	r3, r31
 5bc:	36 fe       	sbrs	r3, 6
 5be:	0d c0       	rjmp	.+26     	; 0x5da <__LOCK_REGION_LENGTH__+0x1da>
 5c0:	23 2d       	mov	r18, r3
 5c2:	2e 7f       	andi	r18, 0xFE	; 254
 5c4:	a2 2e       	mov	r10, r18
 5c6:	89 14       	cp	r8, r9
 5c8:	58 f4       	brcc	.+22     	; 0x5e0 <__LOCK_REGION_LENGTH__+0x1e0>
 5ca:	34 fe       	sbrs	r3, 4
 5cc:	0b c0       	rjmp	.+22     	; 0x5e4 <__LOCK_REGION_LENGTH__+0x1e4>
 5ce:	32 fc       	sbrc	r3, 2
 5d0:	09 c0       	rjmp	.+18     	; 0x5e4 <__LOCK_REGION_LENGTH__+0x1e4>
 5d2:	83 2d       	mov	r24, r3
 5d4:	8e 7e       	andi	r24, 0xEE	; 238
 5d6:	a8 2e       	mov	r10, r24
 5d8:	05 c0       	rjmp	.+10     	; 0x5e4 <__LOCK_REGION_LENGTH__+0x1e4>
 5da:	b8 2c       	mov	r11, r8
 5dc:	a3 2c       	mov	r10, r3
 5de:	03 c0       	rjmp	.+6      	; 0x5e6 <__LOCK_REGION_LENGTH__+0x1e6>
 5e0:	b8 2c       	mov	r11, r8
 5e2:	01 c0       	rjmp	.+2      	; 0x5e6 <__LOCK_REGION_LENGTH__+0x1e6>
 5e4:	b9 2c       	mov	r11, r9
 5e6:	a4 fe       	sbrs	r10, 4
 5e8:	0f c0       	rjmp	.+30     	; 0x608 <__LOCK_REGION_LENGTH__+0x208>
 5ea:	fe 01       	movw	r30, r28
 5ec:	e8 0d       	add	r30, r8
 5ee:	f1 1d       	adc	r31, r1
 5f0:	80 81       	ld	r24, Z
 5f2:	80 33       	cpi	r24, 0x30	; 48
 5f4:	21 f4       	brne	.+8      	; 0x5fe <__LOCK_REGION_LENGTH__+0x1fe>
 5f6:	9a 2d       	mov	r25, r10
 5f8:	99 7e       	andi	r25, 0xE9	; 233
 5fa:	a9 2e       	mov	r10, r25
 5fc:	09 c0       	rjmp	.+18     	; 0x610 <__LOCK_REGION_LENGTH__+0x210>
 5fe:	a2 fe       	sbrs	r10, 2
 600:	06 c0       	rjmp	.+12     	; 0x60e <__LOCK_REGION_LENGTH__+0x20e>
 602:	b3 94       	inc	r11
 604:	b3 94       	inc	r11
 606:	04 c0       	rjmp	.+8      	; 0x610 <__LOCK_REGION_LENGTH__+0x210>
 608:	8a 2d       	mov	r24, r10
 60a:	86 78       	andi	r24, 0x86	; 134
 60c:	09 f0       	breq	.+2      	; 0x610 <__LOCK_REGION_LENGTH__+0x210>
 60e:	b3 94       	inc	r11
 610:	a3 fc       	sbrc	r10, 3
 612:	10 c0       	rjmp	.+32     	; 0x634 <__LOCK_REGION_LENGTH__+0x234>
 614:	a0 fe       	sbrs	r10, 0
 616:	06 c0       	rjmp	.+12     	; 0x624 <__LOCK_REGION_LENGTH__+0x224>
 618:	b2 14       	cp	r11, r2
 61a:	80 f4       	brcc	.+32     	; 0x63c <__LOCK_REGION_LENGTH__+0x23c>
 61c:	28 0c       	add	r2, r8
 61e:	92 2c       	mov	r9, r2
 620:	9b 18       	sub	r9, r11
 622:	0d c0       	rjmp	.+26     	; 0x63e <__LOCK_REGION_LENGTH__+0x23e>
 624:	b2 14       	cp	r11, r2
 626:	58 f4       	brcc	.+22     	; 0x63e <__LOCK_REGION_LENGTH__+0x23e>
 628:	b6 01       	movw	r22, r12
 62a:	80 e2       	ldi	r24, 0x20	; 32
 62c:	90 e0       	ldi	r25, 0x00	; 0
 62e:	76 d0       	rcall	.+236    	; 0x71c <fputc>
 630:	b3 94       	inc	r11
 632:	f8 cf       	rjmp	.-16     	; 0x624 <__LOCK_REGION_LENGTH__+0x224>
 634:	b2 14       	cp	r11, r2
 636:	18 f4       	brcc	.+6      	; 0x63e <__LOCK_REGION_LENGTH__+0x23e>
 638:	2b 18       	sub	r2, r11
 63a:	02 c0       	rjmp	.+4      	; 0x640 <__LOCK_REGION_LENGTH__+0x240>
 63c:	98 2c       	mov	r9, r8
 63e:	21 2c       	mov	r2, r1
 640:	a4 fe       	sbrs	r10, 4
 642:	0f c0       	rjmp	.+30     	; 0x662 <__LOCK_REGION_LENGTH__+0x262>
 644:	b6 01       	movw	r22, r12
 646:	80 e3       	ldi	r24, 0x30	; 48
 648:	90 e0       	ldi	r25, 0x00	; 0
 64a:	68 d0       	rcall	.+208    	; 0x71c <fputc>
 64c:	a2 fe       	sbrs	r10, 2
 64e:	16 c0       	rjmp	.+44     	; 0x67c <__LOCK_REGION_LENGTH__+0x27c>
 650:	a1 fc       	sbrc	r10, 1
 652:	03 c0       	rjmp	.+6      	; 0x65a <__LOCK_REGION_LENGTH__+0x25a>
 654:	88 e7       	ldi	r24, 0x78	; 120
 656:	90 e0       	ldi	r25, 0x00	; 0
 658:	02 c0       	rjmp	.+4      	; 0x65e <__LOCK_REGION_LENGTH__+0x25e>
 65a:	88 e5       	ldi	r24, 0x58	; 88
 65c:	90 e0       	ldi	r25, 0x00	; 0
 65e:	b6 01       	movw	r22, r12
 660:	0c c0       	rjmp	.+24     	; 0x67a <__LOCK_REGION_LENGTH__+0x27a>
 662:	8a 2d       	mov	r24, r10
 664:	86 78       	andi	r24, 0x86	; 134
 666:	51 f0       	breq	.+20     	; 0x67c <__LOCK_REGION_LENGTH__+0x27c>
 668:	a1 fe       	sbrs	r10, 1
 66a:	02 c0       	rjmp	.+4      	; 0x670 <__LOCK_REGION_LENGTH__+0x270>
 66c:	8b e2       	ldi	r24, 0x2B	; 43
 66e:	01 c0       	rjmp	.+2      	; 0x672 <__LOCK_REGION_LENGTH__+0x272>
 670:	80 e2       	ldi	r24, 0x20	; 32
 672:	a7 fc       	sbrc	r10, 7
 674:	8d e2       	ldi	r24, 0x2D	; 45
 676:	b6 01       	movw	r22, r12
 678:	90 e0       	ldi	r25, 0x00	; 0
 67a:	50 d0       	rcall	.+160    	; 0x71c <fputc>
 67c:	89 14       	cp	r8, r9
 67e:	30 f4       	brcc	.+12     	; 0x68c <__LOCK_REGION_LENGTH__+0x28c>
 680:	b6 01       	movw	r22, r12
 682:	80 e3       	ldi	r24, 0x30	; 48
 684:	90 e0       	ldi	r25, 0x00	; 0
 686:	4a d0       	rcall	.+148    	; 0x71c <fputc>
 688:	9a 94       	dec	r9
 68a:	f8 cf       	rjmp	.-16     	; 0x67c <__LOCK_REGION_LENGTH__+0x27c>
 68c:	8a 94       	dec	r8
 68e:	f3 01       	movw	r30, r6
 690:	e8 0d       	add	r30, r8
 692:	f1 1d       	adc	r31, r1
 694:	80 81       	ld	r24, Z
 696:	b6 01       	movw	r22, r12
 698:	90 e0       	ldi	r25, 0x00	; 0
 69a:	40 d0       	rcall	.+128    	; 0x71c <fputc>
 69c:	81 10       	cpse	r8, r1
 69e:	f6 cf       	rjmp	.-20     	; 0x68c <__LOCK_REGION_LENGTH__+0x28c>
 6a0:	22 20       	and	r2, r2
 6a2:	09 f4       	brne	.+2      	; 0x6a6 <__LOCK_REGION_LENGTH__+0x2a6>
 6a4:	4e ce       	rjmp	.-868    	; 0x342 <vfprintf+0x4c>
 6a6:	b6 01       	movw	r22, r12
 6a8:	80 e2       	ldi	r24, 0x20	; 32
 6aa:	90 e0       	ldi	r25, 0x00	; 0
 6ac:	37 d0       	rcall	.+110    	; 0x71c <fputc>
 6ae:	2a 94       	dec	r2
 6b0:	f7 cf       	rjmp	.-18     	; 0x6a0 <__LOCK_REGION_LENGTH__+0x2a0>
 6b2:	f6 01       	movw	r30, r12
 6b4:	86 81       	ldd	r24, Z+6	; 0x06
 6b6:	97 81       	ldd	r25, Z+7	; 0x07
 6b8:	02 c0       	rjmp	.+4      	; 0x6be <__LOCK_REGION_LENGTH__+0x2be>
 6ba:	8f ef       	ldi	r24, 0xFF	; 255
 6bc:	9f ef       	ldi	r25, 0xFF	; 255
 6be:	2b 96       	adiw	r28, 0x0b	; 11
 6c0:	0f b6       	in	r0, 0x3f	; 63
 6c2:	f8 94       	cli
 6c4:	de bf       	out	0x3e, r29	; 62
 6c6:	0f be       	out	0x3f, r0	; 63
 6c8:	cd bf       	out	0x3d, r28	; 61
 6ca:	df 91       	pop	r29
 6cc:	cf 91       	pop	r28
 6ce:	1f 91       	pop	r17
 6d0:	0f 91       	pop	r16
 6d2:	ff 90       	pop	r15
 6d4:	ef 90       	pop	r14
 6d6:	df 90       	pop	r13
 6d8:	cf 90       	pop	r12
 6da:	bf 90       	pop	r11
 6dc:	af 90       	pop	r10
 6de:	9f 90       	pop	r9
 6e0:	8f 90       	pop	r8
 6e2:	7f 90       	pop	r7
 6e4:	6f 90       	pop	r6
 6e6:	5f 90       	pop	r5
 6e8:	4f 90       	pop	r4
 6ea:	3f 90       	pop	r3
 6ec:	2f 90       	pop	r2
 6ee:	08 95       	ret

000006f0 <strnlen_P>:
 6f0:	fc 01       	movw	r30, r24
 6f2:	05 90       	lpm	r0, Z+
 6f4:	61 50       	subi	r22, 0x01	; 1
 6f6:	70 40       	sbci	r23, 0x00	; 0
 6f8:	01 10       	cpse	r0, r1
 6fa:	d8 f7       	brcc	.-10     	; 0x6f2 <strnlen_P+0x2>
 6fc:	80 95       	com	r24
 6fe:	90 95       	com	r25
 700:	8e 0f       	add	r24, r30
 702:	9f 1f       	adc	r25, r31
 704:	08 95       	ret

00000706 <strnlen>:
 706:	fc 01       	movw	r30, r24
 708:	61 50       	subi	r22, 0x01	; 1
 70a:	70 40       	sbci	r23, 0x00	; 0
 70c:	01 90       	ld	r0, Z+
 70e:	01 10       	cpse	r0, r1
 710:	d8 f7       	brcc	.-10     	; 0x708 <strnlen+0x2>
 712:	80 95       	com	r24
 714:	90 95       	com	r25
 716:	8e 0f       	add	r24, r30
 718:	9f 1f       	adc	r25, r31
 71a:	08 95       	ret

0000071c <fputc>:
 71c:	0f 93       	push	r16
 71e:	1f 93       	push	r17
 720:	cf 93       	push	r28
 722:	df 93       	push	r29
 724:	fb 01       	movw	r30, r22
 726:	23 81       	ldd	r18, Z+3	; 0x03
 728:	21 fd       	sbrc	r18, 1
 72a:	03 c0       	rjmp	.+6      	; 0x732 <fputc+0x16>
 72c:	8f ef       	ldi	r24, 0xFF	; 255
 72e:	9f ef       	ldi	r25, 0xFF	; 255
 730:	2c c0       	rjmp	.+88     	; 0x78a <fputc+0x6e>
 732:	22 ff       	sbrs	r18, 2
 734:	16 c0       	rjmp	.+44     	; 0x762 <fputc+0x46>
 736:	46 81       	ldd	r20, Z+6	; 0x06
 738:	57 81       	ldd	r21, Z+7	; 0x07
 73a:	24 81       	ldd	r18, Z+4	; 0x04
 73c:	35 81       	ldd	r19, Z+5	; 0x05
 73e:	42 17       	cp	r20, r18
 740:	53 07       	cpc	r21, r19
 742:	44 f4       	brge	.+16     	; 0x754 <fputc+0x38>
 744:	a0 81       	ld	r26, Z
 746:	b1 81       	ldd	r27, Z+1	; 0x01
 748:	9d 01       	movw	r18, r26
 74a:	2f 5f       	subi	r18, 0xFF	; 255
 74c:	3f 4f       	sbci	r19, 0xFF	; 255
 74e:	31 83       	std	Z+1, r19	; 0x01
 750:	20 83       	st	Z, r18
 752:	8c 93       	st	X, r24
 754:	26 81       	ldd	r18, Z+6	; 0x06
 756:	37 81       	ldd	r19, Z+7	; 0x07
 758:	2f 5f       	subi	r18, 0xFF	; 255
 75a:	3f 4f       	sbci	r19, 0xFF	; 255
 75c:	37 83       	std	Z+7, r19	; 0x07
 75e:	26 83       	std	Z+6, r18	; 0x06
 760:	14 c0       	rjmp	.+40     	; 0x78a <fputc+0x6e>
 762:	8b 01       	movw	r16, r22
 764:	ec 01       	movw	r28, r24
 766:	fb 01       	movw	r30, r22
 768:	00 84       	ldd	r0, Z+8	; 0x08
 76a:	f1 85       	ldd	r31, Z+9	; 0x09
 76c:	e0 2d       	mov	r30, r0
 76e:	09 95       	icall
 770:	89 2b       	or	r24, r25
 772:	e1 f6       	brne	.-72     	; 0x72c <fputc+0x10>
 774:	d8 01       	movw	r26, r16
 776:	16 96       	adiw	r26, 0x06	; 6
 778:	8d 91       	ld	r24, X+
 77a:	9c 91       	ld	r25, X
 77c:	17 97       	sbiw	r26, 0x07	; 7
 77e:	01 96       	adiw	r24, 0x01	; 1
 780:	17 96       	adiw	r26, 0x07	; 7
 782:	9c 93       	st	X, r25
 784:	8e 93       	st	-X, r24
 786:	16 97       	sbiw	r26, 0x06	; 6
 788:	ce 01       	movw	r24, r28
 78a:	df 91       	pop	r29
 78c:	cf 91       	pop	r28
 78e:	1f 91       	pop	r17
 790:	0f 91       	pop	r16
 792:	08 95       	ret

00000794 <__ultoa_invert>:
 794:	fa 01       	movw	r30, r20
 796:	aa 27       	eor	r26, r26
 798:	28 30       	cpi	r18, 0x08	; 8
 79a:	51 f1       	breq	.+84     	; 0x7f0 <__ultoa_invert+0x5c>
 79c:	20 31       	cpi	r18, 0x10	; 16
 79e:	81 f1       	breq	.+96     	; 0x800 <__ultoa_invert+0x6c>
 7a0:	e8 94       	clt
 7a2:	6f 93       	push	r22
 7a4:	6e 7f       	andi	r22, 0xFE	; 254
 7a6:	6e 5f       	subi	r22, 0xFE	; 254
 7a8:	7f 4f       	sbci	r23, 0xFF	; 255
 7aa:	8f 4f       	sbci	r24, 0xFF	; 255
 7ac:	9f 4f       	sbci	r25, 0xFF	; 255
 7ae:	af 4f       	sbci	r26, 0xFF	; 255
 7b0:	b1 e0       	ldi	r27, 0x01	; 1
 7b2:	3e d0       	rcall	.+124    	; 0x830 <__ultoa_invert+0x9c>
 7b4:	b4 e0       	ldi	r27, 0x04	; 4
 7b6:	3c d0       	rcall	.+120    	; 0x830 <__ultoa_invert+0x9c>
 7b8:	67 0f       	add	r22, r23
 7ba:	78 1f       	adc	r23, r24
 7bc:	89 1f       	adc	r24, r25
 7be:	9a 1f       	adc	r25, r26
 7c0:	a1 1d       	adc	r26, r1
 7c2:	68 0f       	add	r22, r24
 7c4:	79 1f       	adc	r23, r25
 7c6:	8a 1f       	adc	r24, r26
 7c8:	91 1d       	adc	r25, r1
 7ca:	a1 1d       	adc	r26, r1
 7cc:	6a 0f       	add	r22, r26
 7ce:	71 1d       	adc	r23, r1
 7d0:	81 1d       	adc	r24, r1
 7d2:	91 1d       	adc	r25, r1
 7d4:	a1 1d       	adc	r26, r1
 7d6:	20 d0       	rcall	.+64     	; 0x818 <__ultoa_invert+0x84>
 7d8:	09 f4       	brne	.+2      	; 0x7dc <__ultoa_invert+0x48>
 7da:	68 94       	set
 7dc:	3f 91       	pop	r19
 7de:	2a e0       	ldi	r18, 0x0A	; 10
 7e0:	26 9f       	mul	r18, r22
 7e2:	11 24       	eor	r1, r1
 7e4:	30 19       	sub	r19, r0
 7e6:	30 5d       	subi	r19, 0xD0	; 208
 7e8:	31 93       	st	Z+, r19
 7ea:	de f6       	brtc	.-74     	; 0x7a2 <__ultoa_invert+0xe>
 7ec:	cf 01       	movw	r24, r30
 7ee:	08 95       	ret
 7f0:	46 2f       	mov	r20, r22
 7f2:	47 70       	andi	r20, 0x07	; 7
 7f4:	40 5d       	subi	r20, 0xD0	; 208
 7f6:	41 93       	st	Z+, r20
 7f8:	b3 e0       	ldi	r27, 0x03	; 3
 7fa:	0f d0       	rcall	.+30     	; 0x81a <__ultoa_invert+0x86>
 7fc:	c9 f7       	brne	.-14     	; 0x7f0 <__ultoa_invert+0x5c>
 7fe:	f6 cf       	rjmp	.-20     	; 0x7ec <__ultoa_invert+0x58>
 800:	46 2f       	mov	r20, r22
 802:	4f 70       	andi	r20, 0x0F	; 15
 804:	40 5d       	subi	r20, 0xD0	; 208
 806:	4a 33       	cpi	r20, 0x3A	; 58
 808:	18 f0       	brcs	.+6      	; 0x810 <__ultoa_invert+0x7c>
 80a:	49 5d       	subi	r20, 0xD9	; 217
 80c:	31 fd       	sbrc	r19, 1
 80e:	40 52       	subi	r20, 0x20	; 32
 810:	41 93       	st	Z+, r20
 812:	02 d0       	rcall	.+4      	; 0x818 <__ultoa_invert+0x84>
 814:	a9 f7       	brne	.-22     	; 0x800 <__ultoa_invert+0x6c>
 816:	ea cf       	rjmp	.-44     	; 0x7ec <__ultoa_invert+0x58>
 818:	b4 e0       	ldi	r27, 0x04	; 4
 81a:	a6 95       	lsr	r26
 81c:	97 95       	ror	r25
 81e:	87 95       	ror	r24
 820:	77 95       	ror	r23
 822:	67 95       	ror	r22
 824:	ba 95       	dec	r27
 826:	c9 f7       	brne	.-14     	; 0x81a <__ultoa_invert+0x86>
 828:	00 97       	sbiw	r24, 0x00	; 0
 82a:	61 05       	cpc	r22, r1
 82c:	71 05       	cpc	r23, r1
 82e:	08 95       	ret
 830:	9b 01       	movw	r18, r22
 832:	ac 01       	movw	r20, r24
 834:	0a 2e       	mov	r0, r26
 836:	06 94       	lsr	r0
 838:	57 95       	ror	r21
 83a:	47 95       	ror	r20
 83c:	37 95       	ror	r19
 83e:	27 95       	ror	r18
 840:	ba 95       	dec	r27
 842:	c9 f7       	brne	.-14     	; 0x836 <__ultoa_invert+0xa2>
 844:	62 0f       	add	r22, r18
 846:	73 1f       	adc	r23, r19
 848:	84 1f       	adc	r24, r20
 84a:	95 1f       	adc	r25, r21
 84c:	a0 1d       	adc	r26, r0
 84e:	08 95       	ret

00000850 <_exit>:
 850:	f8 94       	cli

00000852 <__stop_program>:
 852:	ff cf       	rjmp	.-2      	; 0x852 <__stop_program>
